# Maintainer: Laurent Carlier <lordheavym@gmail.com>

pkgname=lib32-vulkan-icd-loader
pkgver=1.2.153
pkgrel=2
arch=(x86_64)
pkgdesc="Vulkan Installable Client Driver (ICD) Loader (32-bit)"
url="https://www.khronos.org/vulkan/"
license=('custom')
makedepends=(cmake python lib32-libx11 lib32-libxrandr lib32-wayland vulkan-headers git)
depends=(lib32-glibc)
optdepends=('lib32-vulkan-driver: packaged vulkan driver')
source=("vulkan-loader-${pkgver}.tar.gz::https://github.com/KhronosGroup/Vulkan-Loader/archive/v${pkgver}.tar.gz"
        0001-Revert-loader-Return-error-if-layer-loading-failed.patch)
sha256sums=('5fb906b2dc968f2256f2d09b093ec8cc7f19812d656c649de8ed709a6da63d4a'
            '0450033ffcd8970ee1d69cf97c989b48e9b675b0fb71197f5e7b39c816b9c4aa')

prepare() {
  cd "${srcdir}"/Vulkan-Loader*

  #Â https://github.com/ValveSoftware/steam-for-linux/issues/7368
  patch -Np1 -i ../0001-Revert-loader-Return-error-if-layer-loading-failed.patch
}

build() {
  export ASFLAGS=--32
  export CFLAGS=-m32
  export CXXFLAGS=-m32                                                                                                                                                                                                            
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig" 

  cd "${srcdir}"/Vulkan-Loader*

  rm -rf build ; mkdir build ; cd build
  cmake -DCMAKE_INSTALL_PREFIX=/usr \
    -DVULKAN_HEADERS_INSTALL_DIR=/usr \
    -DCMAKE_INSTALL_SYSCONFDIR=/etc \
    -DCMAKE_INSTALL_LIBDIR=lib32 \
    -DCMAKE_INSTALL_DATADIR=/share \
    -DCMAKE_SKIP_RPATH=True \
    -DBUILD_TESTS=Off \
    -DBUILD_WSI_XCB_SUPPORT=On \
    -DBUILD_WSI_XLIB_SUPPORT=On \
    -DBUILD_WSI_WAYLAND_SUPPORT=On \
    -DCMAKE_BUILD_TYPE=Release \
    ..
  make
}

package() {
  cd "${srcdir}"/Vulkan-Loader*/build
  
  make DESTDIR="${pkgdir}" install

  install -dm755 ${pkgdir}/usr/share/licenses/${pkgname}
  install -m644 ../LICENSE.txt "${pkgdir}"/usr/share/licenses/${pkgname}/
}
