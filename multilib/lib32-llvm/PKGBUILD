# Maintainer: Laurent Carlier <lordheavym@gmail.com>
# Contributor: Evangelos Foutras <foutrelis@gmail.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgname=('lib32-llvm' 'lib32-llvm-libs')
pkgver=12.0.0
pkgrel=2
arch=('loongarch64' 'x86_64')
url="https://llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=('cmake' 'ninja' 'lib32-libffi' 'lib32-zlib' 'python' 'gcc-multilib'
             'lib32-libxml2')
options=('staticlibs')
_source_base=https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver
source=($_source_base/llvm-$pkgver.src.tar.xz{,.sig}
        force-visibility-of-llvm-Any-to-external.patch
        llvm-link-with-Bsymbolic-functions.patch
        add-fno-semantic-interposition.patch
        no-strict-aliasing-DwarfCompileUnit.patch)
sha256sums=('49dc47c8697a1a0abd4ee51629a696d7bfe803662f2a7252a3b16fc75f3a8b50'
            'SKIP'
            '98721af5a36af2a8e88c14a81b16d3929b12515d7d2d1ba385eb243dca3c32cb'
            '560ce1e206c19f4b86f4c583b743db0ad47a610418999350710aafd60ae50fcd'
            'fc8c64267a5d179e9fc24fb2bc6150edef2598c83f5b2d138d14e05ce9f4e345'
            'd1eff24508e35aae6c26a943dbaa3ef5acb60a145b008fd1ef9ac6f6c4faa662')
validpgpkeys+=('B6C8F98282B944E3B0D5C2530FC3042E345AD05D') # Hans Wennborg <hans@chromium.org>
validpgpkeys+=('474E22316ABF4785A88C6E8EA2C794A986419D8A') # Tom Stellard <tstellar@redhat.com>

prepare() {
  cd "$srcdir/llvm-$pkgver.src"
  mkdir build

  # https://bugs.llvm.org/show_bug.cgi?id=48992
  patch -Np2 -i ../force-visibility-of-llvm-Any-to-external.patch

  # https://bugs.archlinux.org/task/70697
  patch -Np2 -i ../llvm-link-with-Bsymbolic-functions.patch
  # https://reviews.llvm.org/D102453
  patch -Np2 -i ../add-fno-semantic-interposition.patch

  # https://bugs.llvm.org/show_bug.cgi?id=50611#c3
  patch -Np2 -i ../no-strict-aliasing-DwarfCompileUnit.patch
}

build() {
  cd "$srcdir/llvm-$pkgver.src/build"

  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"

  cmake .. -G Ninja \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLLVM_LIBDIR_SUFFIX=32 \
    -DCMAKE_C_FLAGS:STRING=-m32 \
    -DCMAKE_CXX_FLAGS:STRING=-m32 \
    -DLLVM_TARGET_ARCH:STRING=i686 \
    -DLLVM_HOST_TRIPLE=$CHOST \
    -DLLVM_DEFAULT_TARGETS_TRIPLE="i686-pc-linux-gnu" \
    -DLLVM_BUILD_LLVM_DYLIB=ON \
    -DLLVM_LINK_LLVM_DYLIB=ON \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_ENABLE_FFI=ON \
    -DLLVM_BUILD_DOCS=OFF \
    -DLLVM_ENABLE_SPHINX=OFF \
    -DLLVM_ENABLE_DOXYGEN=OFF \
    -DLLVM_BINUTILS_INCDIR=/usr/include

  ninja all
}

package_lib32-llvm() {
  pkgdesc="Collection of modular and reusable compiler and toolchain technologies (32-bit)"
  depends=('lib32-llvm-libs' 'llvm')

  cd "$srcdir/llvm-$pkgver.src/build"

  DESTDIR="$pkgdir" ninja install

  # The runtime library goes into lib32-llvm-libs
  mv "$pkgdir"/usr/lib32/lib{LLVM,LTO,Remarks}*.so* "$srcdir"
  mv -f "$pkgdir"/usr/lib32/LLVMgold.so "$srcdir"

  # Fix permissions of static libs
  chmod -x "$pkgdir"/usr/lib32/*.a

  mv "$pkgdir/usr/bin/llvm-config" "$pkgdir/usr/lib32/llvm-config"
  mv "$pkgdir/usr/include/llvm/Config/llvm-config.h" \
    "$pkgdir/usr/lib32/llvm-config-32.h"

  rm -rf "$pkgdir"/usr/{bin,include,share/{doc,man,llvm,opt-viewer}}

  # Needed for multilib (https://bugs.archlinux.org/task/29951)
  # Header stub is taken from Fedora
  install -d "$pkgdir/usr/include/llvm/Config"
  mv "$pkgdir/usr/lib32/llvm-config-32.h" "$pkgdir/usr/include/llvm/Config/"

  mkdir "$pkgdir"/usr/bin
  mv "$pkgdir/usr/lib32/llvm-config" "$pkgdir/usr/bin/llvm-config32"

  install -Dm644 ../LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_lib32-llvm-libs() {
  pkgdesc="Low Level Virtual Machine (runtime library)(32-bit) "
  depends=('lib32-libffi' 'lib32-zlib' 'lib32-ncurses' 'lib32-libxml2' 'lib32-gcc-libs')

  install -d "$pkgdir/usr/lib32"

  cp -P \
    "$srcdir"/lib{LLVM,LTO,Remarks}*.so* \
    "$srcdir"/LLVMgold.so \
    "$pkgdir/usr/lib32/"

  # Symlink LLVMgold.so from /usr/lib/bfd-plugins
  # https://bugs.archlinux.org/task/28479
  install -d "$pkgdir/usr/lib32/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib32/bfd-plugins/LLVMgold.so"

  install -Dm644 llvm-$pkgver.src/LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
