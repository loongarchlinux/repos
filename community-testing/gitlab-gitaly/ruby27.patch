commit 97a8954f6d7764a0f010875093395d42578e309f
Author: Anatol Pomozov <anatol.pomozov@gmail.com>
Date:   Tue Jun 21 09:37:26 2022 -0700

    Pin sources to ruby2.7 package

diff --git a/Makefile b/Makefile
index 117498e19..74e3254ec 100644
--- a/Makefile
+++ b/Makefile
@@ -374,7 +374,7 @@ race-go: test-go
 .PHONY: rspec
 ## Run Ruby tests.
 rspec: prepare-tests
-	${Q}cd ${GITALY_RUBY_DIR} && PATH='${SOURCE_DIR}/internal/testhelper/testdata/home/bin:${PATH}' bundle exec rspec
+	${Q}cd ${GITALY_RUBY_DIR} && PATH='${SOURCE_DIR}/internal/testhelper/testdata/home/bin:${PATH}' bundle-2.7 exec rspec
 
 # This is a workaround for our unprivileged CI builds. We manually execute the
 # build target as privileged user, but then run the rspec target unprivileged.
@@ -425,7 +425,7 @@ clean-ruby-vendor-go:
 .PHONY: rubocop
 ## Run Rubocop.
 rubocop: ${SOURCE_DIR}/.ruby-bundle
-	${Q}cd ${GITALY_RUBY_DIR} && bundle exec rubocop --parallel --config ${GITALY_RUBY_DIR}/.rubocop.yml ${GITALY_RUBY_DIR} ${SOURCE_DIR}/_support/test-boot
+	${Q}cd ${GITALY_RUBY_DIR} && bundle-2.7 exec rubocop --parallel --config ${GITALY_RUBY_DIR}/.rubocop.yml ${GITALY_RUBY_DIR} ${SOURCE_DIR}/_support/test-boot
 
 .PHONY: cover
 ## Generate coverage report via Go tests.
@@ -497,7 +497,9 @@ libgit2: ${LIBGIT2_INSTALL_DIR}/lib/libgit2.a
 # step. Both Omnibus and CNG assume it is in the Gitaly root, not in
 # _build. Hence the '../' in front.
 ${SOURCE_DIR}/.ruby-bundle: ${GITALY_RUBY_DIR}/Gemfile.lock ${GITALY_RUBY_DIR}/Gemfile
-	${Q}cd ${GITALY_RUBY_DIR} && bundle install
+	${Q}cd ${GITALY_RUBY_DIR} && bundle-2.7 config set --local deployment "true"
+	${Q}cd ${GITALY_RUBY_DIR} && bundle-2.7 config # for debugging
+	${Q}cd ${GITALY_RUBY_DIR} && bundle-2.7 install
 	${Q}touch $@
 
 ${SOURCE_DIR}/NOTICE: ${BUILD_DIR}/NOTICE
diff --git a/_support/generate-proto-ruby b/_support/generate-proto-ruby
index 6ddb15cbb..bf4bc51f0 100755
--- a/_support/generate-proto-ruby
+++ b/_support/generate-proto-ruby
@@ -20,7 +20,7 @@ def main
     # locations. `protoc` requires this.
     proto_include_abs = File.absolute_path(File.join('..', PROTO_INCLUDE))
 
-    run!(%W[bundle exec grpc_tools_ruby_protoc -I #{proto_include_abs} --ruby_out=../#{ruby_lib_gitaly} --grpc_out=../#{ruby_lib_gitaly}] + PROTO_FILES)
+    run!(%W[bundle-2.7 exec grpc_tools_ruby_protoc -I #{proto_include_abs} --ruby_out=../#{ruby_lib_gitaly} --grpc_out=../#{ruby_lib_gitaly}] + PROTO_FILES)
   end
 
   write_ruby_requires
diff --git a/internal/gitaly/linguist/linguist.go b/internal/gitaly/linguist/linguist.go
index 4ac9abfd2..29b6add09 100644
--- a/internal/gitaly/linguist/linguist.go
+++ b/internal/gitaly/linguist/linguist.go
@@ -87,7 +87,7 @@ func (inst *Instance) Color(language string) string {
 }
 
 func (inst *Instance) startGitLinguist(ctx context.Context, repoPath string, commitID string) (*command.Command, error) {
-	bundle, err := exec.LookPath("bundle")
+	bundle, err := exec.LookPath("bundle-2.7")
 	if err != nil {
 		return nil, fmt.Errorf("finding bundle executable: %w", err)
 	}
@@ -127,7 +127,7 @@ func openLanguagesJSON(cfg config.Cfg) (io.ReadCloser, error) {
 	// We use a symlink because we cannot trust Bundler to not print garbage
 	// on its stdout.
 	rubyScript := `FileUtils.ln_sf(Bundler.rubygems.find_name('github-linguist').first.full_gem_path, ARGV.first)`
-	cmd := exec.Command("bundle", "exec", "ruby", "-rfileutils", "-e", rubyScript, linguistPathSymlink.Name())
+	cmd := exec.Command("bundle-2.7", "exec", "ruby-2.7", "-rfileutils", "-e", rubyScript, linguistPathSymlink.Name())
 	cmd.Dir = cfg.Ruby.Dir
 
 	// We have learned that in practice the command we are about to run is a
diff --git a/internal/gitaly/rubyserver/rubyserver.go b/internal/gitaly/rubyserver/rubyserver.go
index 5ac213e72..5d71ddeed 100644
--- a/internal/gitaly/rubyserver/rubyserver.go
+++ b/internal/gitaly/rubyserver/rubyserver.go
@@ -190,7 +190,7 @@ func (s *Server) start() error {
 		// Use 'ruby-cd' to make sure gitaly-ruby has the same working directory
 		// as the current process. This is a hack to sort-of support relative
 		// Unix socket paths.
-		args := []string{"bundle", "exec", "bin/ruby-cd", wd, gitalyRuby, strconv.Itoa(os.Getpid()), socketPath}
+		args := []string{"bundle-2.7", "exec", "bin/ruby-cd", wd, gitalyRuby, strconv.Itoa(os.Getpid()), socketPath}
 
 		events := make(chan supervisor.Event)
 		check := func() error { return ping(socketPath) }
diff --git a/ruby/bin/gitaly-ruby b/ruby/bin/gitaly-ruby
index c0f17b1e5..31121e12e 100755
--- a/ruby/bin/gitaly-ruby
+++ b/ruby/bin/gitaly-ruby
@@ -1,4 +1,4 @@
-#!/usr/bin/env ruby
+#!/usr/bin/env ruby-2.7
 
 # Gitaly always spawns this executable with LANG=en_US.UTF-8. In case the
 # system doesn't have this local, Ruby will fall back to the C locale and as a
diff --git a/ruby/bin/ruby-cd b/ruby/bin/ruby-cd
index 9c60fcd42..15f0cb05a 100755
--- a/ruby/bin/ruby-cd
+++ b/ruby/bin/ruby-cd
@@ -1,4 +1,4 @@
-#!/usr/bin/env ruby
+#!/usr/bin/env ruby-2.7
 
 # This script lets you run `bundle exec` in one directory, and then changes into another.
 
