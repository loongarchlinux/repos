From 113756db30fcbffe9e90b54c29e78dee0676109f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=B4me=20Chilliet?= <come.chilliet@nextcloud.com>
Date: Tue, 19 Oct 2021 17:11:53 +0200
Subject: [PATCH] Fix ArrayAccess and JsonSerializable return types
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

First round of modifications for PHP 8.1

Signed-off-by: CÃ´me Chilliet <come.chilliet@nextcloud.com>
---
 apps/files_external/lib/Lib/Auth/AuthMechanism.php |  4 +---
 apps/files_external/lib/Lib/Backend/Backend.php    |  4 +---
 .../files_external/lib/Lib/DefinitionParameter.php |  4 +---
 apps/files_external/lib/Lib/StorageConfig.php      |  4 +---
 apps/theming/lib/Service/JSDataService.php         |  2 +-
 apps/user_status/lib/Service/JSDataService.php     |  2 +-
 core/Command/Broadcast/Test.php                    |  2 +-
 lib/private/Accounts/Account.php                   |  3 ++-
 lib/private/Accounts/AccountProperty.php           |  2 +-
 lib/private/Accounts/AccountPropertyCollection.php |  2 +-
 lib/private/AppFramework/Http/Request.php          |  5 +++--
 .../AppFramework/Utility/SimpleContainer.php       |  8 +++++---
 lib/private/Authentication/Token/DefaultToken.php  |  2 +-
 .../Authentication/Token/PublicKeyToken.php        |  2 +-
 lib/private/Cache/CappedMemoryCache.php            | 10 +++++++---
 .../Contacts/ContactsMenu/Actions/LinkAction.php   |  5 +----
 .../EventDispatcher/GenericEventWrapper.php        | 14 +++++++++-----
 lib/private/Files/Cache/CacheEntry.php             | 10 +++++++---
 lib/private/Files/FileInfo.php                     | 10 +++++++---
 lib/private/FullTextSearch/Model/IndexDocument.php |  4 +---
 .../Model/SearchRequestSimpleQuery.php             |  3 +--
 lib/private/L10N/L10NString.php                    |  6 +-----
 lib/private/Memcache/Cache.php                     | 10 +++++++---
 lib/private/Session/CryptoSessionData.php          |  5 +++--
 lib/private/Session/Session.php                    |  5 +++--
 .../AppFramework/Services/InitialStateProvider.php |  2 ++
 lib/public/Dashboard/Model/WidgetSetting.php       |  4 +---
 lib/public/Dashboard/Model/WidgetSetup.php         |  4 +---
 lib/public/Dashboard/Model/WidgetTemplate.php      |  4 +---
 lib/public/DirectEditing/ATemplate.php             |  3 +--
 lib/public/EventDispatcher/GenericEvent.php        |  2 ++
 lib/public/Files/Template/Template.php             |  2 +-
 lib/public/Files/Template/TemplateFileCreator.php  |  2 +-
 tests/lib/InitialStateServiceTest.php              |  2 +-
 34 files changed, 79 insertions(+), 74 deletions(-)

diff --git a/apps/files_external/lib/Lib/Auth/AuthMechanism.php b/apps/files_external/lib/Lib/Auth/AuthMechanism.php
index f676957794d8..210dd705723e 100644
--- a/apps/files_external/lib/Lib/Auth/AuthMechanism.php
+++ b/apps/files_external/lib/Lib/Auth/AuthMechanism.php
@@ -90,10 +90,8 @@ public function setScheme($scheme) {
 
 	/**
 	 * Serialize into JSON for client-side JS
-	 *
-	 * @return array
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		$data = $this->jsonSerializeDefinition();
 		$data += $this->jsonSerializeIdentifier();
 
diff --git a/apps/files_external/lib/Lib/Backend/Backend.php b/apps/files_external/lib/Lib/Backend/Backend.php
index a6e63eb30d19..021d208aed33 100644
--- a/apps/files_external/lib/Lib/Backend/Backend.php
+++ b/apps/files_external/lib/Lib/Backend/Backend.php
@@ -137,10 +137,8 @@ public function setLegacyAuthMechanismCallback(callable $callback) {
 
 	/**
 	 * Serialize into JSON for client-side JS
-	 *
-	 * @return array
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		$data = $this->jsonSerializeDefinition();
 		$data += $this->jsonSerializeIdentifier();
 
diff --git a/apps/files_external/lib/Lib/DefinitionParameter.php b/apps/files_external/lib/Lib/DefinitionParameter.php
index fbfbbfd4686a..6b081d5a089f 100644
--- a/apps/files_external/lib/Lib/DefinitionParameter.php
+++ b/apps/files_external/lib/Lib/DefinitionParameter.php
@@ -167,10 +167,8 @@ public function setTooltip(string $tooltip) {
 
 	/**
 	 * Serialize into JSON for client-side JS
-	 *
-	 * @return string
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'value' => $this->getText(),
 			'flags' => $this->getFlags(),
diff --git a/apps/files_external/lib/Lib/StorageConfig.php b/apps/files_external/lib/Lib/StorageConfig.php
index 97b72005018d..26ba483b00ef 100644
--- a/apps/files_external/lib/Lib/StorageConfig.php
+++ b/apps/files_external/lib/Lib/StorageConfig.php
@@ -396,10 +396,8 @@ public function setType($type) {
 
 	/**
 	 * Serialize config to JSON
-	 *
-	 * @return array
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		$result = [];
 		if (!is_null($this->id)) {
 			$result['id'] = $this->id;
diff --git a/apps/theming/lib/Service/JSDataService.php b/apps/theming/lib/Service/JSDataService.php
index a6e5d6f8e365..1c4d138a7646 100644
--- a/apps/theming/lib/Service/JSDataService.php
+++ b/apps/theming/lib/Service/JSDataService.php
@@ -50,7 +50,7 @@ public function __construct(
 		$this->appConfig = $appConfig;
 	}
 
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'name' => $this->themingDefaults->getName(),
 			'url' => $this->themingDefaults->getBaseUrl(),
diff --git a/apps/user_status/lib/Service/JSDataService.php b/apps/user_status/lib/Service/JSDataService.php
index 6d83591ab2f4..c08643ec64fb 100644
--- a/apps/user_status/lib/Service/JSDataService.php
+++ b/apps/user_status/lib/Service/JSDataService.php
@@ -49,7 +49,7 @@ public function __construct(IUserSession $userSession,
 		$this->statusService = $statusService;
 	}
 
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		$user = $this->userSession->getUser();
 
 		if ($user === null) {
diff --git a/core/Command/Broadcast/Test.php b/core/Command/Broadcast/Test.php
index 91050725e176..86cd30e4b4c6 100644
--- a/core/Command/Broadcast/Test.php
+++ b/core/Command/Broadcast/Test.php
@@ -87,7 +87,7 @@ public function getUids(): array {
 				];
 			}
 
-			public function jsonSerialize() {
+			public function jsonSerialize(): array {
 				return [
 					'description' => 'this is a test event',
 				];
diff --git a/lib/private/Accounts/Account.php b/lib/private/Accounts/Account.php
index 1e4189f2b35c..540d15cd4b9e 100644
--- a/lib/private/Accounts/Account.php
+++ b/lib/private/Accounts/Account.php
@@ -104,7 +104,8 @@ public function getFilteredProperties(string $scope = null, string $verified = n
 		return $result;
 	}
 
-	public function jsonSerialize() {
+	/** @return IAccountPropertyCollection[]|IAccountProperty[] */
+	public function jsonSerialize(): array {
 		return $this->properties;
 	}
 
diff --git a/lib/private/Accounts/AccountProperty.php b/lib/private/Accounts/AccountProperty.php
index 0e6356e9e92e..4b7f2b0c04c2 100644
--- a/lib/private/Accounts/AccountProperty.php
+++ b/lib/private/Accounts/AccountProperty.php
@@ -54,7 +54,7 @@ public function __construct(string $name, string $value, string $scope, string $
 		$this->verificationData = $verificationData;
 	}
 
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'name' => $this->getName(),
 			'value' => $this->getValue(),
diff --git a/lib/private/Accounts/AccountPropertyCollection.php b/lib/private/Accounts/AccountPropertyCollection.php
index 3aed76d8746a..091c5734218b 100644
--- a/lib/private/Accounts/AccountPropertyCollection.php
+++ b/lib/private/Accounts/AccountPropertyCollection.php
@@ -102,7 +102,7 @@ public function removePropertyByValue(string $value): IAccountPropertyCollection
 		return $this;
 	}
 
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [$this->collectionName => $this->properties];
 	}
 
diff --git a/lib/private/AppFramework/Http/Request.php b/lib/private/AppFramework/Http/Request.php
index a95fd208155c..c67500bcaa4e 100644
--- a/lib/private/AppFramework/Http/Request.php
+++ b/lib/private/AppFramework/Http/Request.php
@@ -199,6 +199,7 @@ public function offsetExists($offset): bool {
 	 * @param string $offset
 	 * @return mixed
 	 */
+	#[\ReturnTypeWillChange]
 	public function offsetGet($offset) {
 		return isset($this->items['parameters'][$offset])
 			? $this->items['parameters'][$offset]
@@ -210,7 +211,7 @@ public function offsetGet($offset) {
 	 * @param string $offset
 	 * @param mixed $value
 	 */
-	public function offsetSet($offset, $value) {
+	public function offsetSet($offset, $value): void {
 		throw new \RuntimeException('You cannot change the contents of the request object');
 	}
 
@@ -218,7 +219,7 @@ public function offsetSet($offset, $value) {
 	 * @see offsetExists
 	 * @param string $offset
 	 */
-	public function offsetUnset($offset) {
+	public function offsetUnset($offset): void {
 		throw new \RuntimeException('You cannot change the contents of the request object');
 	}
 
diff --git a/lib/private/AppFramework/Utility/SimpleContainer.php b/lib/private/AppFramework/Utility/SimpleContainer.php
index c38dbadf0a97..598c66b6aba7 100644
--- a/lib/private/AppFramework/Utility/SimpleContainer.php
+++ b/lib/private/AppFramework/Utility/SimpleContainer.php
@@ -197,13 +197,15 @@ protected function sanitizeName($name) {
 	/**
 	 * @deprecated 20.0.0 use \Psr\Container\ContainerInterface::has
 	 */
-	public function offsetExists($id) {
+	public function offsetExists($id): bool {
 		return $this->container->offsetExists($id);
 	}
 
 	/**
 	 * @deprecated 20.0.0 use \Psr\Container\ContainerInterface::get
+	 * @return mixed
 	 */
+	#[\ReturnTypeWillChange]
 	public function offsetGet($id) {
 		return $this->container->offsetGet($id);
 	}
@@ -211,14 +213,14 @@ public function offsetGet($id) {
 	/**
 	 * @deprecated 20.0.0 use \OCP\IContainer::registerService
 	 */
-	public function offsetSet($id, $service) {
+	public function offsetSet($id, $service): void {
 		$this->container->offsetSet($id, $service);
 	}
 
 	/**
 	 * @deprecated 20.0.0
 	 */
-	public function offsetUnset($offset) {
+	public function offsetUnset($offset): void {
 		$this->container->offsetUnset($offset);
 	}
 }
diff --git a/lib/private/Authentication/Token/DefaultToken.php b/lib/private/Authentication/Token/DefaultToken.php
index 5a008586a901..b649fdbb6aff 100644
--- a/lib/private/Authentication/Token/DefaultToken.php
+++ b/lib/private/Authentication/Token/DefaultToken.php
@@ -121,7 +121,7 @@ public function getPassword() {
 		return parent::getPassword();
 	}
 
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'id' => $this->id,
 			'name' => $this->name,
diff --git a/lib/private/Authentication/Token/PublicKeyToken.php b/lib/private/Authentication/Token/PublicKeyToken.php
index 3351c767ce3b..d060fe141032 100644
--- a/lib/private/Authentication/Token/PublicKeyToken.php
+++ b/lib/private/Authentication/Token/PublicKeyToken.php
@@ -138,7 +138,7 @@ public function getPassword() {
 		return parent::getPassword();
 	}
 
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'id' => $this->id,
 			'name' => $this->name,
diff --git a/lib/private/Cache/CappedMemoryCache.php b/lib/private/Cache/CappedMemoryCache.php
index 408c3935ffb9..584a53f0ff28 100644
--- a/lib/private/Cache/CappedMemoryCache.php
+++ b/lib/private/Cache/CappedMemoryCache.php
@@ -63,19 +63,23 @@ public function clear($prefix = '') {
 		return true;
 	}
 
-	public function offsetExists($offset) {
+	public function offsetExists($offset): bool {
 		return $this->hasKey($offset);
 	}
 
+	/**
+	 * @return mixed
+	 */
+	#[\ReturnTypeWillChange]
 	public function &offsetGet($offset) {
 		return $this->cache[$offset];
 	}
 
-	public function offsetSet($offset, $value) {
+	public function offsetSet($offset, $value): void {
 		$this->set($offset, $value);
 	}
 
-	public function offsetUnset($offset) {
+	public function offsetUnset($offset): void {
 		$this->remove($offset);
 	}
 
diff --git a/lib/private/Contacts/ContactsMenu/Actions/LinkAction.php b/lib/private/Contacts/ContactsMenu/Actions/LinkAction.php
index 5acafed2fdaf..3f917854aac8 100644
--- a/lib/private/Contacts/ContactsMenu/Actions/LinkAction.php
+++ b/lib/private/Contacts/ContactsMenu/Actions/LinkAction.php
@@ -106,10 +106,7 @@ public function getAppId(): string {
 		return $this->appId;
 	}
 
-	/**
-	 * @return array
-	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'title' => $this->name,
 			'icon' => $this->icon,
diff --git a/lib/private/EventDispatcher/GenericEventWrapper.php b/lib/private/EventDispatcher/GenericEventWrapper.php
index 55e23d2ff7fa..3574bc8bb835 100644
--- a/lib/private/EventDispatcher/GenericEventWrapper.php
+++ b/lib/private/EventDispatcher/GenericEventWrapper.php
@@ -100,19 +100,23 @@ public function hasArgument($key) {
 		return $this->event->hasArgument($key);
 	}
 
+	/**
+	 * @return mixed
+	 */
+	#[\ReturnTypeWillChange]
 	public function offsetGet($key) {
 		return $this->event->offsetGet($key);
 	}
 
-	public function offsetSet($key, $value) {
-		return $this->event->offsetSet($key, $value);
+	public function offsetSet($key, $value): void {
+		$this->event->offsetSet($key, $value);
 	}
 
-	public function offsetUnset($key) {
-		return $this->event->offsetUnset($key);
+	public function offsetUnset($key): void {
+		$this->event->offsetUnset($key);
 	}
 
-	public function offsetExists($key) {
+	public function offsetExists($key): bool {
 		return $this->event->offsetExists($key);
 	}
 
diff --git a/lib/private/Files/Cache/CacheEntry.php b/lib/private/Files/Cache/CacheEntry.php
index 156f075c2d06..12f0273fb6e7 100644
--- a/lib/private/Files/Cache/CacheEntry.php
+++ b/lib/private/Files/Cache/CacheEntry.php
@@ -37,18 +37,22 @@ public function __construct(array $data) {
 		$this->data = $data;
 	}
 
-	public function offsetSet($offset, $value) {
+	public function offsetSet($offset, $value): void {
 		$this->data[$offset] = $value;
 	}
 
-	public function offsetExists($offset) {
+	public function offsetExists($offset): bool {
 		return isset($this->data[$offset]);
 	}
 
-	public function offsetUnset($offset) {
+	public function offsetUnset($offset): void {
 		unset($this->data[$offset]);
 	}
 
+	/**
+	 * @return mixed
+	 */
+	#[\ReturnTypeWillChange]
 	public function offsetGet($offset) {
 		if (isset($this->data[$offset])) {
 			return $this->data[$offset];
diff --git a/lib/private/Files/FileInfo.php b/lib/private/Files/FileInfo.php
index 8a8de6e4c19b..2f361fc051db 100644
--- a/lib/private/Files/FileInfo.php
+++ b/lib/private/Files/FileInfo.php
@@ -104,18 +104,22 @@ public function __construct($path, $storage, $internalPath, $data, $mount, $owne
 		$this->rawSize = $this->data['size'] ?? 0;
 	}
 
-	public function offsetSet($offset, $value) {
+	public function offsetSet($offset, $value): void {
 		$this->data[$offset] = $value;
 	}
 
-	public function offsetExists($offset) {
+	public function offsetExists($offset): bool {
 		return isset($this->data[$offset]);
 	}
 
-	public function offsetUnset($offset) {
+	public function offsetUnset($offset): void {
 		unset($this->data[$offset]);
 	}
 
+	/**
+	 * @return mixed
+	 */
+	#[\ReturnTypeWillChange]
 	public function offsetGet($offset) {
 		if ($offset === 'type') {
 			return $this->getType();
diff --git a/lib/private/FullTextSearch/Model/IndexDocument.php b/lib/private/FullTextSearch/Model/IndexDocument.php
index a1648ab6e2ab..3078f12c4653 100644
--- a/lib/private/FullTextSearch/Model/IndexDocument.php
+++ b/lib/private/FullTextSearch/Model/IndexDocument.php
@@ -963,10 +963,8 @@ public function __destruct() {
 
 	/**
 	 * @since 15.0.0
-	 *
-	 * @return array
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'id' => $this->getId(),
 			'providerId' => $this->getProviderId(),
diff --git a/lib/private/FullTextSearch/Model/SearchRequestSimpleQuery.php b/lib/private/FullTextSearch/Model/SearchRequestSimpleQuery.php
index 9c9ac71efa95..d6bfe6d91023 100644
--- a/lib/private/FullTextSearch/Model/SearchRequestSimpleQuery.php
+++ b/lib/private/FullTextSearch/Model/SearchRequestSimpleQuery.php
@@ -168,10 +168,9 @@ public function addValueBool(bool $value): ISearchRequestSimpleQuery {
 
 
 	/**
-	 * @return array|mixed
 	 * @since 17.0.0
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'type' => $this->getType(),
 			'field' => $this->getField(),
diff --git a/lib/private/L10N/L10NString.php b/lib/private/L10N/L10NString.php
index 33ccc4b14096..de4bc38d7442 100644
--- a/lib/private/L10N/L10NString.php
+++ b/lib/private/L10N/L10NString.php
@@ -82,11 +82,7 @@ public function __toString(): string {
 		return vsprintf($text, $this->parameters);
 	}
 
-
-	/**
-	 * @return string
-	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): string {
 		return $this->__toString();
 	}
 }
diff --git a/lib/private/Memcache/Cache.php b/lib/private/Memcache/Cache.php
index 95213c168497..1d54a705098e 100644
--- a/lib/private/Memcache/Cache.php
+++ b/lib/private/Memcache/Cache.php
@@ -78,19 +78,23 @@ abstract public function clear($prefix = '');
 
 	//implement the ArrayAccess interface
 
-	public function offsetExists($offset) {
+	public function offsetExists($offset): bool {
 		return $this->hasKey($offset);
 	}
 
-	public function offsetSet($offset, $value) {
+	public function offsetSet($offset, $value): void {
 		$this->set($offset, $value);
 	}
 
+	/**
+	 * @return mixed
+	 */
+	#[\ReturnTypeWillChange]
 	public function offsetGet($offset) {
 		return $this->get($offset);
 	}
 
-	public function offsetUnset($offset) {
+	public function offsetUnset($offset): void {
 		$this->remove($offset);
 	}
 }
diff --git a/lib/private/Session/CryptoSessionData.php b/lib/private/Session/CryptoSessionData.php
index 94ad8f90dcfd..2e3bd46da5b4 100644
--- a/lib/private/Session/CryptoSessionData.php
+++ b/lib/private/Session/CryptoSessionData.php
@@ -195,6 +195,7 @@ public function offsetExists($offset): bool {
 	 * @param mixed $offset
 	 * @return mixed
 	 */
+	#[\ReturnTypeWillChange]
 	public function offsetGet($offset) {
 		return $this->get($offset);
 	}
@@ -203,14 +204,14 @@ public function offsetGet($offset) {
 	 * @param mixed $offset
 	 * @param mixed $value
 	 */
-	public function offsetSet($offset, $value) {
+	public function offsetSet($offset, $value): void {
 		$this->set($offset, $value);
 	}
 
 	/**
 	 * @param mixed $offset
 	 */
-	public function offsetUnset($offset) {
+	public function offsetUnset($offset): void {
 		$this->remove($offset);
 	}
 }
diff --git a/lib/private/Session/Session.php b/lib/private/Session/Session.php
index b9497983fbb0..affba322bec7 100644
--- a/lib/private/Session/Session.php
+++ b/lib/private/Session/Session.php
@@ -55,6 +55,7 @@ public function offsetExists($offset): bool {
 	 * @param mixed $offset
 	 * @return mixed
 	 */
+	#[\ReturnTypeWillChange]
 	public function offsetGet($offset) {
 		return $this->get($offset);
 	}
@@ -63,14 +64,14 @@ public function offsetGet($offset) {
 	 * @param mixed $offset
 	 * @param mixed $value
 	 */
-	public function offsetSet($offset, $value) {
+	public function offsetSet($offset, $value): void {
 		$this->set($offset, $value);
 	}
 
 	/**
 	 * @param mixed $offset
 	 */
-	public function offsetUnset($offset) {
+	public function offsetUnset($offset): void {
 		$this->remove($offset);
 	}
 
diff --git a/lib/public/AppFramework/Services/InitialStateProvider.php b/lib/public/AppFramework/Services/InitialStateProvider.php
index c317fad3f5de..dbc486537924 100644
--- a/lib/public/AppFramework/Services/InitialStateProvider.php
+++ b/lib/public/AppFramework/Services/InitialStateProvider.php
@@ -42,7 +42,9 @@ abstract public function getData();
 
 	/**
 	 * @since 21.0.0
+	 * @return mixed
 	 */
+	#[\ReturnTypeWillChange]
 	final public function jsonSerialize() {
 		return $this->getData();
 	}
diff --git a/lib/public/Dashboard/Model/WidgetSetting.php b/lib/public/Dashboard/Model/WidgetSetting.php
index c456c63f4f58..fce59a4350b6 100644
--- a/lib/public/Dashboard/Model/WidgetSetting.php
+++ b/lib/public/Dashboard/Model/WidgetSetting.php
@@ -230,10 +230,8 @@ public function getDefault(): string {
 	/**
 	 * @since 15.0.0
 	 * @deprecated 20.0.0
-	 *
-	 * @return array
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'name' => $this->getName(),
 			'title' => $this->getTitle(),
diff --git a/lib/public/Dashboard/Model/WidgetSetup.php b/lib/public/Dashboard/Model/WidgetSetup.php
index 1cc8d9ff561b..f3e09dcc71b1 100644
--- a/lib/public/Dashboard/Model/WidgetSetup.php
+++ b/lib/public/Dashboard/Model/WidgetSetup.php
@@ -261,10 +261,8 @@ public function setDefaultSettings(array $settings): WidgetSetup {
 	/**
 	 * @since 15.0.0
 	 * @deprecated 20.0.0
-	 *
-	 * @return array
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'size' => $this->getSizes(),
 			'menu' => $this->getMenuEntries(),
diff --git a/lib/public/Dashboard/Model/WidgetTemplate.php b/lib/public/Dashboard/Model/WidgetTemplate.php
index e6f9742fed7a..3521960c303c 100644
--- a/lib/public/Dashboard/Model/WidgetTemplate.php
+++ b/lib/public/Dashboard/Model/WidgetTemplate.php
@@ -312,10 +312,8 @@ public function getSetting(string $key): WidgetSetting {
 	/**
 	 * @since 15.0.0
 	 * @deprecated 20.0.0
-	 *
-	 * @return array
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'icon' => $this->getIcon(),
 			'css' => $this->getCss(),
diff --git a/lib/public/DirectEditing/ATemplate.php b/lib/public/DirectEditing/ATemplate.php
index c38fc898dab4..53aff0d40ffe 100644
--- a/lib/public/DirectEditing/ATemplate.php
+++ b/lib/public/DirectEditing/ATemplate.php
@@ -57,9 +57,8 @@ abstract public function getPreview(): string;
 
 	/**
 	 * @since 18.0.0
-	 * @return array|mixed
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'id' => $this->getId(),
 			'title' => $this->getTitle(),
diff --git a/lib/public/EventDispatcher/GenericEvent.php b/lib/public/EventDispatcher/GenericEvent.php
index e78ae1827a16..1ba1cc6da14f 100644
--- a/lib/public/EventDispatcher/GenericEvent.php
+++ b/lib/public/EventDispatcher/GenericEvent.php
@@ -156,7 +156,9 @@ public function offsetExists($offset): bool {
 	 * @link https://php.net/manual/en/arrayaccess.offsetget.php
 	 * @since 18.0.0
 	 * @deprecated 22.0.0
+	 * @return mixed
 	 */
+	#[\ReturnTypeWillChange]
 	public function offsetGet($offset) {
 		return $this->arguments[$offset];
 	}
diff --git a/lib/public/Files/Template/Template.php b/lib/public/Files/Template/Template.php
index 50d8b406be9c..d71ef3b3655d 100644
--- a/lib/public/Files/Template/Template.php
+++ b/lib/public/Files/Template/Template.php
@@ -69,7 +69,7 @@ public function setHasPreview(bool $hasPreview): void {
 	/**
 	 * @since 21.0.0
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'templateType' => $this->templateType,
 			'templateId' => $this->templateId,
diff --git a/lib/public/Files/Template/TemplateFileCreator.php b/lib/public/Files/Template/TemplateFileCreator.php
index 7be45e68ef9f..26edf585869d 100644
--- a/lib/public/Files/Template/TemplateFileCreator.php
+++ b/lib/public/Files/Template/TemplateFileCreator.php
@@ -106,7 +106,7 @@ public function getOrder(): int {
 	/**
 	 * @since 21.0.0
 	 */
-	public function jsonSerialize() {
+	public function jsonSerialize(): array {
 		return [
 			'app' => $this->appId,
 			'label' => $this->actionName,

From 260be93a14af6eccb6240dfb3692073775da259e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=B4me=20Chilliet?= <come.chilliet@nextcloud.com>
Date: Tue, 19 Oct 2021 17:08:57 +0200
Subject: [PATCH 01/12] Allow running Nextcloud with PHP 8.1
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: CÃ´me Chilliet <come.chilliet@nextcloud.com>
---
 lib/versioncheck.php | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/lib/versioncheck.php b/lib/versioncheck.php
index 4b1d9dec4d72..8aa68dd35fdd 100644
--- a/lib/versioncheck.php
+++ b/lib/versioncheck.php
@@ -33,10 +33,10 @@
 	exit(1);
 }
 
-// Show warning if > PHP 8.0 is used as Nextcloud is not compatible with > PHP 8.0 for now
-if (PHP_VERSION_ID >= 80100) {
+// Show warning if > PHP 8.1 is used as Nextcloud is not compatible with > PHP 8.1 for now
+if (PHP_VERSION_ID > 80100) {
 	http_response_code(500);
-	echo 'This version of Nextcloud is not compatible with > PHP 8.0.<br/>';
+	echo 'This version of Nextcloud is not compatible with > PHP 8.1.<br/>';
 	echo 'You are currently running ' . PHP_VERSION . '.';
 	exit(1);
 }

From 37f8f7a5a18e57507330036b747d4b12e58efae4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=B4me=20Chilliet?= <come.chilliet@nextcloud.com>
Date: Tue, 26 Oct 2021 16:42:19 +0200
Subject: [PATCH 03/12] Fix tests on PHP 8.1 for encryption, files_sharing,
 files_version,
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

  files_trashbin and theming apps

Signed-off-by: CÃ´me Chilliet <come.chilliet@nextcloud.com>
---
 apps/encryption/lib/Command/FixEncryptedVersion.php          | 5 +----
 apps/encryption/tests/Crypto/EncryptAllTest.php              | 5 ++++-
 .../tests/Controller/PublicPreviewControllerTest.php         | 4 ++++
 .../tests/Controller/PreviewControllerTest.php               | 2 ++
 .../tests/Controller/PreviewControllerTest.php               | 2 ++
 apps/theming/tests/Controller/IconControllerTest.php         | 2 ++
 apps/theming/tests/Controller/ThemingControllerTest.php      | 3 +++
 7 files changed, 18 insertions(+), 5 deletions(-)

diff --git a/apps/encryption/lib/Command/FixEncryptedVersion.php b/apps/encryption/lib/Command/FixEncryptedVersion.php
index d51f64c8ef91..073c1f1438a8 100644
--- a/apps/encryption/lib/Command/FixEncryptedVersion.php
+++ b/apps/encryption/lib/Command/FixEncryptedVersion.php
@@ -116,10 +116,7 @@ protected function execute(InputInterface $input, OutputInterface $output): int
 		$user = (string)$input->getArgument('user');
 		$pathToWalk = "/$user/files";
 
-		/**
-		 * trim() returns an empty string when the argument is an unset/null
-		 */
-		$pathOption = \trim($input->getOption('path'), '/');
+		$pathOption = \trim(($input->getOption('path') ?? ''), '/');
 		if ($pathOption !== "") {
 			$pathToWalk = "$pathToWalk/$pathOption";
 		}

From f3dcbfe146782d2c7dec8760651e79605ddc96e7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=B4me=20Chilliet?= <come.chilliet@nextcloud.com>
Date: Tue, 26 Oct 2021 16:43:39 +0200
Subject: [PATCH 04/12] Fix PHP 8.1 support for user_ldap application
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: CÃ´me Chilliet <come.chilliet@nextcloud.com>
---
 apps/user_ldap/lib/Access.php                 |  8 +-
 apps/user_ldap/lib/Connection.php             |  9 +-
 apps/user_ldap/lib/Group_LDAP.php             |  6 +-
 apps/user_ldap/lib/Group_Proxy.php            |  2 +-
 apps/user_ldap/lib/IGroupLDAP.php             |  2 +-
 apps/user_ldap/lib/ILDAPWrapper.php           | 60 ++++++------
 apps/user_ldap/lib/IUserLDAP.php              |  2 +-
 apps/user_ldap/lib/LDAP.php                   | 92 +++++--------------
 apps/user_ldap/lib/LDAPProvider.php           |  4 +-
 apps/user_ldap/lib/PagedResults/IAdapter.php  |  4 +-
 apps/user_ldap/lib/PagedResults/TLinkId.php   | 12 ++-
 apps/user_ldap/lib/User/Manager.php           |  2 +-
 apps/user_ldap/lib/User/User.php              |  8 +-
 apps/user_ldap/lib/User_LDAP.php              |  2 +-
 apps/user_ldap/lib/User_Proxy.php             |  2 +-
 apps/user_ldap/lib/Wizard.php                 |  6 +-
 apps/user_ldap/tests/AccessTest.php           |  2 +-
 .../Integration/ExceptionOnLostConnection.php |  4 +-
 18 files changed, 96 insertions(+), 131 deletions(-)

diff --git a/apps/user_ldap/lib/Access.php b/apps/user_ldap/lib/Access.php
index 0af04747ded2..f79efe909968 100644
--- a/apps/user_ldap/lib/Access.php
+++ b/apps/user_ldap/lib/Access.php
@@ -260,7 +260,7 @@ public function readAttribute($dn, $attr, $filter = 'objectClass=*') {
 	/**
 	 * Runs an read operation against LDAP
 	 *
-	 * @param resource $cr the LDAP connection
+	 * @param resource|\LDAP\Connection $cr the LDAP connection
 	 * @param string $dn
 	 * @param string $attribute
 	 * @param string $filter
@@ -926,7 +926,7 @@ public function fetchListOfUsers(string $filter, array $attr, int $limit = null,
 	 * @throws \Exception
 	 */
 	public function batchApplyUserAttributes(array $ldapRecords) {
-		$displayNameAttribute = strtolower($this->connection->ldapUserDisplayName);
+		$displayNameAttribute = strtolower((string)$this->connection->ldapUserDisplayName);
 		foreach ($ldapRecords as $userRecord) {
 			if (!isset($userRecord[$displayNameAttribute])) {
 				// displayName is obligatory
@@ -1186,7 +1186,7 @@ private function executeSearch(
 	/**
 	 * processes an LDAP paged search operation
 	 *
-	 * @param resource $sr the array containing the LDAP search resources
+	 * @param resource|\LDAP\Result|resource[]|\LDAP\Result[] $sr the array containing the LDAP search resources
 	 * @param int $foundItems number of results in the single search operation
 	 * @param int $limit maximum results to be counted
 	 * @param bool $pagedSearchOK whether a paged search has been executed
@@ -1303,7 +1303,7 @@ private function count(
 	}
 
 	/**
-	 * @param resource $sr
+	 * @param resource|\LDAP\Result|resource[]|\LDAP\Result[] $sr
 	 * @return int
 	 * @throws ServerNotAvailableException
 	 */
diff --git a/apps/user_ldap/lib/Connection.php b/apps/user_ldap/lib/Connection.php
index 77ae34f9f6c4..6666da1e933c 100644
--- a/apps/user_ldap/lib/Connection.php
+++ b/apps/user_ldap/lib/Connection.php
@@ -74,6 +74,9 @@
  * @property string ldapMatchingRuleInChainState
  */
 class Connection extends LDAPUtility {
+	/**
+	 * @var resource|\LDAP\Connection|null
+	 */
 	private $ldapConnectionRes = null;
 	private $configPrefix;
 	private $configID;
@@ -202,7 +205,7 @@ public function init($force = false) {
 	}
 
 	/**
-	 * Returns the LDAP handler
+	 * @return resource|\LDAP\Connection The LDAP resource
 	 */
 	public function getConnectionResource() {
 		if (!$this->ldapConnectionRes) {
@@ -408,7 +411,7 @@ private function doSoftValidation() {
 			}
 		}
 
-		if ((stripos($this->configuration->ldapHost, 'ldaps://') === 0)
+		if ((stripos((string)$this->configuration->ldapHost, 'ldaps://') === 0)
 			&& $this->configuration->ldapTLS) {
 			$this->configuration->ldapTLS = false;
 			$this->logger->info(
@@ -487,7 +490,7 @@ private function doCriticalValidation() {
 			$configurationOK = false;
 		}
 
-		if (mb_strpos($this->configuration->ldapLoginFilter, '%uid', 0, 'UTF-8')
+		if (mb_strpos((string)$this->configuration->ldapLoginFilter, '%uid', 0, 'UTF-8')
 		   === false) {
 			$this->logger->warning(
 				$errorStr.'login filter does not contain %uid place holder.',
diff --git a/apps/user_ldap/lib/Group_LDAP.php b/apps/user_ldap/lib/Group_LDAP.php
index 744f921c6dd3..9172b5fa25fc 100644
--- a/apps/user_ldap/lib/Group_LDAP.php
+++ b/apps/user_ldap/lib/Group_LDAP.php
@@ -83,7 +83,7 @@ public function __construct(Access $access, GroupPluginManager $groupPluginManag
 		$this->cachedNestedGroups = new CappedMemoryCache();
 		$this->groupPluginManager = $groupPluginManager;
 		$this->logger = OC::$server->get(LoggerInterface::class);
-		$this->ldapGroupMemberAssocAttr = strtolower($gAssoc);
+		$this->ldapGroupMemberAssocAttr = strtolower((string)$gAssoc);
 	}
 
 	/**
@@ -202,7 +202,7 @@ public function inGroup($uid, $gid) {
 	 * @throws ServerNotAvailableException
 	 */
 	public function getDynamicGroupMembers(string $dnGroup): array {
-		$dynamicGroupMemberURL = strtolower($this->access->connection->ldapDynamicGroupMemberURL);
+		$dynamicGroupMemberURL = strtolower((string)$this->access->connection->ldapDynamicGroupMemberURL);
 
 		if (empty($dynamicGroupMemberURL)) {
 			return [];
@@ -1312,7 +1312,7 @@ public function getGroupDetails($gid) {
 	 * of the current access.
 	 *
 	 * @param string $gid
-	 * @return resource of the LDAP connection
+	 * @return resource|\LDAP\Connection The LDAP connection
 	 * @throws ServerNotAvailableException
 	 */
 	public function getNewLDAPConnection($gid) {
diff --git a/apps/user_ldap/lib/Group_Proxy.php b/apps/user_ldap/lib/Group_Proxy.php
index 3f9bb9013eb4..92a9041949e2 100644
--- a/apps/user_ldap/lib/Group_Proxy.php
+++ b/apps/user_ldap/lib/Group_Proxy.php
@@ -290,7 +290,7 @@ public function getLDAPAccess($gid) {
 	 * The connection needs to be closed manually.
 	 *
 	 * @param string $gid
-	 * @return resource of the LDAP connection
+	 * @return resource|\LDAP\Connection The LDAP connection
 	 */
 	public function getNewLDAPConnection($gid) {
 		return $this->handleRequest($gid, 'getNewLDAPConnection', [$gid]);
diff --git a/apps/user_ldap/lib/IGroupLDAP.php b/apps/user_ldap/lib/IGroupLDAP.php
index 33636dd8f552..2face1aa9074 100644
--- a/apps/user_ldap/lib/IGroupLDAP.php
+++ b/apps/user_ldap/lib/IGroupLDAP.php
@@ -36,7 +36,7 @@ public function getLDAPAccess($gid);
 	/**
 	 * Return a new LDAP connection for the specified group.
 	 * @param string $gid
-	 * @return resource of the LDAP connection
+	 * @return resource|\LDAP\Connection The LDAP connection
 	 */
 	public function getNewLDAPConnection($gid);
 }
diff --git a/apps/user_ldap/lib/ILDAPWrapper.php b/apps/user_ldap/lib/ILDAPWrapper.php
index c82df09d2345..9917898a001b 100644
--- a/apps/user_ldap/lib/ILDAPWrapper.php
+++ b/apps/user_ldap/lib/ILDAPWrapper.php
@@ -35,7 +35,7 @@ interface ILDAPWrapper {
 
 	/**
 	 * Bind to LDAP directory
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @param string $dn an RDN to log in with
 	 * @param string $password the password
 	 * @return bool true on success, false otherwise
@@ -54,7 +54,7 @@ public function connect($host, $port);
 
 	/**
 	 * Send LDAP pagination control
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @param int $pageSize number of results per page
 	 * @param bool $isCritical Indicates whether the pagination is critical of not.
 	 * @param string $cookie structure sent by LDAP server
@@ -64,8 +64,8 @@ public function controlPagedResult($link, $pageSize, $isCritical);
 
 	/**
 	 * Retrieve the LDAP pagination cookie
-	 * @param resource $link LDAP link resource
-	 * @param resource $result LDAP result resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
+	 * @param resource|\LDAP\Result $result LDAP result resource
 	 * @param string $cookie structure sent by LDAP server
 	 * @return bool true on success, false otherwise
 	 *
@@ -75,22 +75,22 @@ public function controlPagedResultResponse($link, $result, &$cookie);
 
 	/**
 	 * Count the number of entries in a search
-	 * @param resource $link LDAP link resource
-	 * @param resource $result LDAP result resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
+	 * @param resource|\LDAP\Result $result LDAP result resource
 	 * @return int|false number of results on success, false otherwise
 	 */
 	public function countEntries($link, $result);
 
 	/**
 	 * Return the LDAP error number of the last LDAP command
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @return int error code
 	 */
 	public function errno($link);
 
 	/**
 	 * Return the LDAP error message of the last LDAP command
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @return string error message
 	 */
 	public function error($link);
@@ -106,69 +106,69 @@ public function explodeDN($dn, $withAttrib);
 
 	/**
 	 * Return first result id
-	 * @param resource $link LDAP link resource
-	 * @param resource $result LDAP result resource
-	 * @return Resource an LDAP search result resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
+	 * @param resource|\LDAP\Result $result LDAP result resource
+	 * @return resource|\LDAP\ResultEntry an LDAP entry resource
 	 * */
 	public function firstEntry($link, $result);
 
 	/**
 	 * Get attributes from a search result entry
-	 * @param resource $link LDAP link resource
-	 * @param resource $result LDAP result resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
+	 * @param resource|\LDAP\ResultEntry $result LDAP result resource
 	 * @return array containing the results, false on error
 	 * */
 	public function getAttributes($link, $result);
 
 	/**
 	 * Get the DN of a result entry
-	 * @param resource $link LDAP link resource
-	 * @param resource $result LDAP result resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
+	 * @param resource|\LDAP\ResultEntry $result LDAP result resource
 	 * @return string containing the DN, false on error
 	 */
 	public function getDN($link, $result);
 
 	/**
 	 * Get all result entries
-	 * @param resource $link LDAP link resource
-	 * @param resource $result LDAP result resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
+	 * @param resource|\LDAP\Result $result LDAP result resource
 	 * @return array containing the results, false on error
 	 */
 	public function getEntries($link, $result);
 
 	/**
 	 * Return next result id
-	 * @param resource $link LDAP link resource
-	 * @param resource $result LDAP entry result resource
-	 * @return resource an LDAP search result resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
+	 * @param resource|\LDAP\ResultEntry $result LDAP result resource
+	 * @return resource|\LDAP\ResultEntry an LDAP entry resource
 	 * */
 	public function nextEntry($link, $result);
 
 	/**
 	 * Read an entry
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @param array $baseDN The DN of the entry to read from
 	 * @param string $filter An LDAP filter
 	 * @param array $attr array of the attributes to read
-	 * @return resource an LDAP search result resource
+	 * @return resource|\LDAP\Result an LDAP search result resource
 	 */
 	public function read($link, $baseDN, $filter, $attr);
 
 	/**
 	 * Search LDAP tree
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @param string $baseDN The DN of the entry to read from
 	 * @param string $filter An LDAP filter
 	 * @param array $attr array of the attributes to read
 	 * @param int $attrsOnly optional, 1 if only attribute types shall be returned
 	 * @param int $limit optional, limits the result entries
-	 * @return resource|false an LDAP search result resource, false on error
+	 * @return resource|\LDAP\Result|false an LDAP search result resource, false on error
 	 */
 	public function search($link, $baseDN, $filter, $attr, $attrsOnly = 0, $limit = 0);
 
 	/**
 	 * Replace the value of a userPassword by $password
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @param string $userDN the DN of the user whose password is to be replaced
 	 * @param string $password the new value for the userPassword
 	 * @return bool true on success, false otherwise
@@ -177,7 +177,7 @@ public function modReplace($link, $userDN, $password);
 
 	/**
 	 * Sets the value of the specified option to be $value
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @param string $option a defined LDAP Server option
 	 * @param int $value the new value for the option
 	 * @return bool true on success, false otherwise
@@ -186,14 +186,14 @@ public function setOption($link, $option, $value);
 
 	/**
 	 * establish Start TLS
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @return bool true on success, false otherwise
 	 */
 	public function startTls($link);
 
 	/**
 	 * Unbind from LDAP directory
-	 * @param resource $link LDAP link resource
+	 * @param resource|\LDAP\Connection $link LDAP link resource
 	 * @return bool true on success, false otherwise
 	 */
 	public function unbind($link);
@@ -208,8 +208,8 @@ public function areLDAPFunctionsAvailable();
 
 	/**
 	 * Checks whether the submitted parameter is a resource
-	 * @param resource $resource the resource variable to check
-	 * @return bool true if it is a resource, false otherwise
+	 * @param mixed $resource the resource variable to check
+	 * @return bool true if it is a resource or LDAP object, false otherwise
 	 */
 	public function isResource($resource);
 }
diff --git a/apps/user_ldap/lib/IUserLDAP.php b/apps/user_ldap/lib/IUserLDAP.php
index 201bbfd75a22..dfba11c5d343 100644
--- a/apps/user_ldap/lib/IUserLDAP.php
+++ b/apps/user_ldap/lib/IUserLDAP.php
@@ -37,7 +37,7 @@ public function getLDAPAccess($uid);
 	/**
 	 * Return a new LDAP connection for the specified user.
 	 * @param string $uid
-	 * @return resource of the LDAP connection
+	 * @return resource|\LDAP\Connection of the LDAP connection
 	 */
 	public function getNewLDAPConnection($uid);
 
diff --git a/apps/user_ldap/lib/LDAP.php b/apps/user_ldap/lib/LDAP.php
index 900f5a7030f7..e33facd0889e 100644
--- a/apps/user_ldap/lib/LDAP.php
+++ b/apps/user_ldap/lib/LDAP.php
@@ -51,19 +51,14 @@ public function __construct(string $logFile = '') {
 	}
 
 	/**
-	 * @param resource $link
-	 * @param string $dn
-	 * @param string $password
-	 * @return bool|mixed
+	 * {@inheritDoc}
 	 */
 	public function bind($link, $dn, $password) {
 		return $this->invokeLDAPMethod('bind', $link, $dn, $password);
 	}
 
 	/**
-	 * @param string $host
-	 * @param string $port
-	 * @return mixed
+	 * {@inheritDoc}
 	 */
 	public function connect($host, $port) {
 		if (strpos($host, '://') === false) {
@@ -76,6 +71,9 @@ public function connect($host, $port) {
 		return $this->invokeLDAPMethod('connect', $host);
 	}
 
+	/**
+	 * {@inheritDoc}
+	 */
 	public function controlPagedResultResponse($link, $result, &$cookie): bool {
 		$this->preFunctionCall(
 			$this->pagedResultsAdapter->getResponseCallFunc(),
@@ -93,10 +91,7 @@ public function controlPagedResultResponse($link, $result, &$cookie): bool {
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param int $pageSize
-	 * @param bool $isCritical
-	 * @return mixed|true
+	 * {@inheritDoc}
 	 */
 	public function controlPagedResult($link, $pageSize, $isCritical) {
 		$fn = $this->pagedResultsAdapter->getRequestCallFunc();
@@ -116,25 +111,21 @@ public function controlPagedResult($link, $pageSize, $isCritical) {
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param LDAP $result
-	 * @return mixed
+	 * {@inheritDoc}
 	 */
 	public function countEntries($link, $result) {
 		return $this->invokeLDAPMethod('count_entries', $link, $result);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @return integer
+	 * {@inheritDoc}
 	 */
 	public function errno($link) {
 		return $this->invokeLDAPMethod('errno', $link);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @return string
+	 * {@inheritDoc}
 	 */
 	public function error($link) {
 		return $this->invokeLDAPMethod('error', $link);
@@ -152,56 +143,42 @@ public function explodeDN($dn, $withAttrib) {
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param LDAP $result
-	 * @return mixed
+	 * {@inheritDoc}
 	 */
 	public function firstEntry($link, $result) {
 		return $this->invokeLDAPMethod('first_entry', $link, $result);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param LDAP $result
-	 * @return array|mixed
+	 * {@inheritDoc}
 	 */
 	public function getAttributes($link, $result) {
 		return $this->invokeLDAPMethod('get_attributes', $link, $result);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param LDAP $result
-	 * @return mixed|string
+	 * {@inheritDoc}
 	 */
 	public function getDN($link, $result) {
 		return $this->invokeLDAPMethod('get_dn', $link, $result);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param LDAP $result
-	 * @return array|mixed
+	 * {@inheritDoc}
 	 */
 	public function getEntries($link, $result) {
 		return $this->invokeLDAPMethod('get_entries', $link, $result);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param resource $result
-	 * @return mixed
+	 * {@inheritDoc}
 	 */
 	public function nextEntry($link, $result) {
 		return $this->invokeLDAPMethod('next_entry', $link, $result);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param string $baseDN
-	 * @param string $filter
-	 * @param array $attr
-	 * @return mixed
+	 * {@inheritDoc}
 	 */
 	public function read($link, $baseDN, $filter, $attr) {
 		$this->pagedResultsAdapter->setReadArgs($link, $baseDN, $filter, $attr);
@@ -209,14 +186,7 @@ public function read($link, $baseDN, $filter, $attr) {
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param string[] $baseDN
-	 * @param string $filter
-	 * @param array $attr
-	 * @param int $attrsOnly
-	 * @param int $limit
-	 * @return mixed
-	 * @throws \Exception
+	 * {@inheritDoc}
 	 */
 	public function search($link, $baseDN, $filter, $attr, $attrsOnly = 0, $limit = 0) {
 		$oldHandler = set_error_handler(function ($no, $message, $file, $line) use (&$oldHandler) {
@@ -239,47 +209,35 @@ public function search($link, $baseDN, $filter, $attr, $attrsOnly = 0, $limit =
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param string $userDN
-	 * @param string $password
-	 * @return bool
+	 * {@inheritDoc}
 	 */
 	public function modReplace($link, $userDN, $password) {
 		return $this->invokeLDAPMethod('mod_replace', $link, $userDN, ['userPassword' => $password]);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param string $userDN
-	 * @param string $oldPassword
-	 * @param string $password
-	 * @return bool
+	 * {@inheritDoc}
 	 */
 	public function exopPasswd($link, $userDN, $oldPassword, $password) {
 		return $this->invokeLDAPMethod('exop_passwd', $link, $userDN, $oldPassword, $password);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @param string $option
-	 * @param int $value
-	 * @return bool|mixed
+	 * {@inheritDoc}
 	 */
 	public function setOption($link, $option, $value) {
 		return $this->invokeLDAPMethod('set_option', $link, $option, $value);
 	}
 
 	/**
-	 * @param LDAP $link
-	 * @return mixed|true
+	 * {@inheritDoc}
 	 */
 	public function startTls($link) {
 		return $this->invokeLDAPMethod('start_tls', $link);
 	}
 
 	/**
-	 * @param resource $link
-	 * @return bool|mixed
+	 * {@inheritDoc}
 	 */
 	public function unbind($link) {
 		return $this->invokeLDAPMethod('unbind', $link);
@@ -294,12 +252,10 @@ public function areLDAPFunctionsAvailable() {
 	}
 
 	/**
-	 * Checks whether the submitted parameter is a resource
-	 * @param Resource $resource the resource variable to check
-	 * @return bool true if it is a resource, false otherwise
+	 * {@inheritDoc}
 	 */
 	public function isResource($resource) {
-		return is_resource($resource);
+		return is_resource($resource) || is_object($resource);
 	}
 
 	/**
@@ -368,7 +324,7 @@ private function preFunctionCall($functionName, $args) {
 	/**
 	 * Analyzes the returned LDAP error and acts accordingly if not 0
 	 *
-	 * @param resource $resource the LDAP Connection resource
+	 * @param resource|\LDAP\Connection $resource the LDAP Connection resource
 	 * @throws ConstraintViolationException
 	 * @throws ServerNotAvailableException
 	 * @throws \Exception
diff --git a/apps/user_ldap/lib/LDAPProvider.php b/apps/user_ldap/lib/LDAPProvider.php
index dd86ce486ac9..751ebf687684 100644
--- a/apps/user_ldap/lib/LDAPProvider.php
+++ b/apps/user_ldap/lib/LDAPProvider.php
@@ -149,7 +149,7 @@ public function sanitizeDN($dn) {
 	 * Return a new LDAP connection resource for the specified user.
 	 * The connection must be closed manually.
 	 * @param string $uid user id
-	 * @return resource of the LDAP connection
+	 * @return resource|\LDAP\Connection The LDAP connection
 	 * @throws \Exception if user id was not found in LDAP
 	 */
 	public function getLDAPConnection($uid) {
@@ -163,7 +163,7 @@ public function getLDAPConnection($uid) {
 	 * Return a new LDAP connection resource for the specified user.
 	 * The connection must be closed manually.
 	 * @param string $gid group id
-	 * @return resource of the LDAP connection
+	 * @return resource|\LDAP\Connection The LDAP connection
 	 * @throws \Exception if group id was not found in LDAP
 	 */
 	public function getGroupLDAPConnection($gid) {
diff --git a/apps/user_ldap/lib/PagedResults/IAdapter.php b/apps/user_ldap/lib/PagedResults/IAdapter.php
index 2dd9ffe80a16..31338126e405 100644
--- a/apps/user_ldap/lib/PagedResults/IAdapter.php
+++ b/apps/user_ldap/lib/PagedResults/IAdapter.php
@@ -82,7 +82,7 @@ public function getResponseCallArgs(array $originalArgs): array;
 	/**
 	 * the adapter should do it's LDAP function call and return success state
 	 *
-	 * @param resource $link LDAP resource
+	 * @param resource|\LDAP\Connection $link LDAP resource
 	 * @return bool
 	 */
 	public function responseCall($link): bool;
@@ -123,7 +123,7 @@ public function getReadArgs($link): array;
 	/**
 	 * Returns the current paged results cookie
 	 *
-	 * @param resource $link LDAP resource
+	 * @param resource|\LDAP\Connection $link LDAP resource
 	 * @return string
 	 */
 	public function getCookie($link): string;
diff --git a/apps/user_ldap/lib/PagedResults/TLinkId.php b/apps/user_ldap/lib/PagedResults/TLinkId.php
index 6f320705e67e..02c36da97f92 100644
--- a/apps/user_ldap/lib/PagedResults/TLinkId.php
+++ b/apps/user_ldap/lib/PagedResults/TLinkId.php
@@ -28,10 +28,16 @@
 
 trait TLinkId {
 	public function getLinkId($link) {
-		if (is_resource($link)) {
+		if (is_object($link)) {
+			return spl_object_id($link);
+		} elseif (is_resource($link)) {
 			return (int)$link;
-		} elseif (is_array($link) && isset($link[0]) && is_resource($link[0])) {
-			return (int)$link[0];
+		} elseif (is_array($link) && isset($link[0])) {
+			if (is_object($link[0])) {
+				return spl_object_id($link[0]);
+			} elseif (is_resource($link[0])) {
+				return (int)$link[0];
+			}
 		}
 		throw new \RuntimeException('No resource provided');
 	}
diff --git a/apps/user_ldap/lib/User/Manager.php b/apps/user_ldap/lib/User/Manager.php
index 63af3cf17709..e752b113e3f1 100644
--- a/apps/user_ldap/lib/User/Manager.php
+++ b/apps/user_ldap/lib/User/Manager.php
@@ -177,7 +177,7 @@ public function getAttributes($minimal = false) {
 			$this->access->getConnection()->ldapExtStorageHomeAttribute,
 		];
 
-		$homeRule = $this->access->getConnection()->homeFolderNamingRule;
+		$homeRule = (string)$this->access->getConnection()->homeFolderNamingRule;
 		if (strpos($homeRule, 'attr:') === 0) {
 			$attributes[] = substr($homeRule, strlen('attr:'));
 		}
diff --git a/apps/user_ldap/lib/User/User.php b/apps/user_ldap/lib/User/User.php
index a0955f94bb4f..ab1500ff3689 100644
--- a/apps/user_ldap/lib/User/User.php
+++ b/apps/user_ldap/lib/User/User.php
@@ -464,9 +464,9 @@ public function updateEmail($valueFromLDAP = null) {
 	 * bytes), '1234 MB' (quota in MB - check the \OC_Helper::computerFileSize method for more info)
 	 *
 	 * fetches the quota from LDAP and stores it as Nextcloud user value
-	 * @param string $valueFromLDAP the quota attribute's value can be passed,
+	 * @param ?string $valueFromLDAP the quota attribute's value can be passed,
 	 * to save the readAttribute request
-	 * @return null
+	 * @return void
 	 */
 	public function updateQuota($valueFromLDAP = null) {
 		if ($this->wasRefreshed('quota')) {
@@ -487,7 +487,7 @@ public function updateQuota($valueFromLDAP = null) {
 			} elseif (is_array($aQuota) && isset($aQuota[0])) {
 				$this->logger->debug('no suitable LDAP quota found for user ' . $this->uid . ': [' . $aQuota[0] . ']', ['app' => 'user_ldap']);
 			}
-		} elseif ($this->verifyQuotaValue($valueFromLDAP)) {
+		} elseif (!is_null($valueFromLDAP) && $this->verifyQuotaValue($valueFromLDAP)) {
 			$quota = $valueFromLDAP;
 		} else {
 			$this->logger->debug('no suitable LDAP quota found for user ' . $this->uid . ': [' . $valueFromLDAP . ']', ['app' => 'user_ldap']);
@@ -509,7 +509,7 @@ public function updateQuota($valueFromLDAP = null) {
 		}
 	}
 
-	private function verifyQuotaValue($quotaValue) {
+	private function verifyQuotaValue(string $quotaValue) {
 		return $quotaValue === 'none' || $quotaValue === 'default' || \OC_Helper::computerFileSize($quotaValue) !== false;
 	}
 
diff --git a/apps/user_ldap/lib/User_LDAP.php b/apps/user_ldap/lib/User_LDAP.php
index b1d4da9514d6..9cd90451ea37 100644
--- a/apps/user_ldap/lib/User_LDAP.php
+++ b/apps/user_ldap/lib/User_LDAP.php
@@ -617,7 +617,7 @@ public function getLDAPAccess($uid) {
 	 * The cloned connection needs to be closed manually.
 	 * of the current access.
 	 * @param string $uid
-	 * @return resource of the LDAP connection
+	 * @return resource|\LDAP\Connection The LDAP connection
 	 */
 	public function getNewLDAPConnection($uid) {
 		$connection = clone $this->access->getConnection();
diff --git a/apps/user_ldap/lib/User_Proxy.php b/apps/user_ldap/lib/User_Proxy.php
index 5731f314aede..183c90493cfa 100644
--- a/apps/user_ldap/lib/User_Proxy.php
+++ b/apps/user_ldap/lib/User_Proxy.php
@@ -368,7 +368,7 @@ public function getLDAPAccess($uid) {
 	 * The connection needs to be closed manually.
 	 *
 	 * @param string $uid
-	 * @return resource of the LDAP connection
+	 * @return resource|\LDAP\Connection The LDAP connection
 	 */
 	public function getNewLDAPConnection($uid) {
 		return $this->handleRequest($uid, 'getNewLDAPConnection', [$uid]);
diff --git a/apps/user_ldap/lib/Wizard.php b/apps/user_ldap/lib/Wizard.php
index 9b037b471347..98d399b77b94 100644
--- a/apps/user_ldap/lib/Wizard.php
+++ b/apps/user_ldap/lib/Wizard.php
@@ -820,7 +820,7 @@ private function detectGroupMemberAssoc() {
 			return false;
 		}
 		$er = $this->ldap->firstEntry($cr, $rr);
-		while (is_resource($er)) {
+		while ($this->ldap->isResource($er)) {
 			$this->ldap->getDN($cr, $er);
 			$attrs = $this->ldap->getAttributes($cr, $er);
 			$result = [];
@@ -1066,7 +1066,7 @@ private function connectAndBind($port, $tls) {
 			['app' => 'user_ldap']
 		);
 		$cr = $this->ldap->connect($host, $port);
-		if (!is_resource($cr)) {
+		if (!$this->ldap->isResource($cr)) {
 			throw new \Exception(self::$l->t('Invalid Host'));
 		}
 
@@ -1276,7 +1276,7 @@ private function determineFeature($objectclasses, $attr, $dbkey, $confkey, $po =
 
 	/**
 	 * appends a list of values fr
-	 * @param resource $result the return value from ldap_get_attributes
+	 * @param array $result the return value from ldap_get_attributes
 	 * @param string $attribute the attribute values to look for
 	 * @param array &$known new values will be appended here
 	 * @return int, state on of the class constants LRESULT_PROCESSED_OK,

From 743267eba4bf0558337dcb47f0f8c382f2b25b69 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=B4me=20Chilliet?= <come.chilliet@nextcloud.com>
Date: Mon, 29 Nov 2021 11:42:27 +0100
Subject: [PATCH 07/12] Fix LDAP related docblocks types
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: CÃ´me Chilliet <come.chilliet@nextcloud.com>
---
 apps/user_ldap/lib/ILDAPWrapper.php | 2 +-
 lib/public/LDAP/ILDAPProvider.php   | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/apps/user_ldap/lib/ILDAPWrapper.php b/apps/user_ldap/lib/ILDAPWrapper.php
index 9917898a001b..3f600a40cc0e 100644
--- a/apps/user_ldap/lib/ILDAPWrapper.php
+++ b/apps/user_ldap/lib/ILDAPWrapper.php
@@ -147,7 +147,7 @@ public function nextEntry($link, $result);
 	/**
 	 * Read an entry
 	 * @param resource|\LDAP\Connection $link LDAP link resource
-	 * @param array $baseDN The DN of the entry to read from
+	 * @param string $baseDN The DN of the entry to read from
 	 * @param string $filter An LDAP filter
 	 * @param array $attr array of the attributes to read
 	 * @return resource|\LDAP\Result an LDAP search result resource
diff --git a/lib/public/LDAP/ILDAPProvider.php b/lib/public/LDAP/ILDAPProvider.php
index 0355a0052c41..8fad3bd2266e 100644
--- a/lib/public/LDAP/ILDAPProvider.php
+++ b/lib/public/LDAP/ILDAPProvider.php
@@ -79,7 +79,7 @@ public function sanitizeDN($dn);
 	/**
 	 * Return a new LDAP connection resource for the specified user.
 	 * @param string $uid user id
-	 * @return resource of the LDAP connection
+	 * @return \LDAP\Connection|resource
 	 * @since 11.0.0
 	 */
 	public function getLDAPConnection($uid);
@@ -87,7 +87,7 @@ public function getLDAPConnection($uid);
 	/**
 	 * Return a new LDAP connection resource for the specified group.
 	 * @param string $gid group id
-	 * @return resource of the LDAP connection
+	 * @return \LDAP\Connection|resource
 	 * @since 13.0.0
 	 */
 	public function getGroupLDAPConnection($gid);

From 72baee96988bbd9d3f7d68a90bf716008946000f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=B4me=20Chilliet?= <come.chilliet@nextcloud.com>
Date: Thu, 2 Dec 2021 16:31:19 +0100
Subject: [PATCH 09/12] Allow minor release of PHP 8.1 to be used as well
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

No reason to allow 8.1.0 and not 8.1.1.

Signed-off-by: CÃ´me Chilliet <come.chilliet@nextcloud.com>
---
 lib/versioncheck.php | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/lib/versioncheck.php b/lib/versioncheck.php
index 8aa68dd35fdd..3e840ff5b461 100644
--- a/lib/versioncheck.php
+++ b/lib/versioncheck.php
@@ -33,10 +33,10 @@
 	exit(1);
 }
 
-// Show warning if > PHP 8.1 is used as Nextcloud is not compatible with > PHP 8.1 for now
-if (PHP_VERSION_ID > 80100) {
+// Show warning if >= PHP 8.2 is used as Nextcloud is not compatible with >= PHP 8.2 for now
+if (PHP_VERSION_ID >= 80200) {
 	http_response_code(500);
-	echo 'This version of Nextcloud is not compatible with > PHP 8.1.<br/>';
+	echo 'This version of Nextcloud is not compatible with PHP>=8.2.<br/>';
 	echo 'You are currently running ' . PHP_VERSION . '.';
 	exit(1);
 }

From c3a1a66eaefac9e06385d125dd4edae3117cc9eb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=B4me=20Chilliet?= <come.chilliet@nextcloud.com>
Date: Thu, 16 Dec 2021 10:35:03 +0100
Subject: [PATCH 12/12] Avoid deprecation warnings about
 libxml_disable_entity_loader in PHP 8.1
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: CÃ´me Chilliet <come.chilliet@nextcloud.com>
---
 lib/private/Updater/ChangesCheck.php | 10 +++++++---
 lib/private/Updater/VersionCheck.php | 10 +++++++---
 2 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/lib/private/Updater/ChangesCheck.php b/lib/private/Updater/ChangesCheck.php
index 600c8db9a3c2..e3ced6e5b123 100644
--- a/lib/private/Updater/ChangesCheck.php
+++ b/lib/private/Updater/ChangesCheck.php
@@ -138,9 +138,13 @@ protected function queryChangesServer(string $uri, ChangesResult $entry): IRespo
 	protected function extractData($body):array {
 		$data = [];
 		if ($body) {
-			$loadEntities = libxml_disable_entity_loader(true);
-			$xml = @simplexml_load_string($body);
-			libxml_disable_entity_loader($loadEntities);
+			if (\LIBXML_VERSION < 20900) {
+				$loadEntities = libxml_disable_entity_loader(true);
+				$xml = @simplexml_load_string($body);
+				libxml_disable_entity_loader($loadEntities);
+			} else {
+				$xml = @simplexml_load_string($body);
+			}
 			if ($xml !== false) {
 				$data['changelogURL'] = (string)$xml->changelog['href'];
 				$data['whatsNew'] = [];
diff --git a/lib/private/Updater/VersionCheck.php b/lib/private/Updater/VersionCheck.php
index ffa707d89909..d9f795796b8c 100644
--- a/lib/private/Updater/VersionCheck.php
+++ b/lib/private/Updater/VersionCheck.php
@@ -95,9 +95,13 @@ public function check() {
 		}
 
 		if ($xml) {
-			$loadEntities = libxml_disable_entity_loader(true);
-			$data = @simplexml_load_string($xml);
-			libxml_disable_entity_loader($loadEntities);
+			if (\LIBXML_VERSION < 20900) {
+				$loadEntities = libxml_disable_entity_loader(true);
+				$data = @simplexml_load_string($xml);
+				libxml_disable_entity_loader($loadEntities);
+			} else {
+				$data = @simplexml_load_string($xml);
+			}
 			if ($data !== false) {
 				$tmp['version'] = (string)$data->version;
 				$tmp['versionstring'] = (string)$data->versionstring;
