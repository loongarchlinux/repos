diff --git a/pimple/pimple/src/Pimple/Container.php b/pimple/pimple/src/Pimple/Container.php
index 715de10e..586a0b77 100644
--- a/pimple/pimple/src/Pimple/Container.php
+++ b/pimple/pimple/src/Pimple/Container.php
@@ -74,8 +74,11 @@ public function __construct(array $values = [])
      * @param string $id    The unique identifier for the parameter or object
      * @param mixed  $value The value of the parameter or a closure to define an object
      *
+     * @return void
+     *
      * @throws FrozenServiceException Prevent override of a frozen service
      */
+    #[\ReturnTypeWillChange]
     public function offsetSet($id, $value)
     {
         if (isset($this->frozen[$id])) {
@@ -95,6 +98,7 @@ public function offsetSet($id, $value)
      *
      * @throws UnknownIdentifierException If the identifier is not defined
      */
+    #[\ReturnTypeWillChange]
     public function offsetGet($id)
     {
         if (!isset($this->keys[$id])) {
@@ -130,6 +134,7 @@ public function offsetGet($id)
      *
      * @return bool
      */
+    #[\ReturnTypeWillChange]
     public function offsetExists($id)
     {
         return isset($this->keys[$id]);
@@ -139,7 +144,10 @@ public function offsetExists($id)
      * Unsets a parameter or an object.
      *
      * @param string $id The unique identifier for the parameter or object
+     *
+     * @return void
      */
+    #[\ReturnTypeWillChange]
     public function offsetUnset($id)
     {
         if (isset($this->keys[$id])) {
@@ -280,8 +288,7 @@ public function keys()
     /**
      * Registers a service provider.
      *
-     * @param ServiceProviderInterface $provider A ServiceProviderInterface instance
-     * @param array                    $values   An array of values that customizes the provider
+     * @param array $values An array of values that customizes the provider
      *
      * @return static
      */
diff --git a/pimple/pimple/src/Pimple/Psr11/ServiceLocator.php b/pimple/pimple/src/Pimple/Psr11/ServiceLocator.php
index c173d7c0..714b8826 100644
--- a/pimple/pimple/src/Pimple/Psr11/ServiceLocator.php
+++ b/pimple/pimple/src/Pimple/Psr11/ServiceLocator.php
@@ -68,7 +68,7 @@ public function get(string $id)
     /**
      * {@inheritdoc}
      */
-    public function has(string $id)
+    public function has(string $id): bool
     {
         return isset($this->aliases[$id]) && isset($this->container[$this->aliases[$id]]);
     }
diff --git a/pimple/pimple/src/Pimple/ServiceIterator.php b/pimple/pimple/src/Pimple/ServiceIterator.php
index 5cde5188..ebafac16 100644
--- a/pimple/pimple/src/Pimple/ServiceIterator.php
+++ b/pimple/pimple/src/Pimple/ServiceIterator.php
@@ -42,26 +42,46 @@ public function __construct(Container $container, array $ids)
         $this->ids = $ids;
     }
 
+    /**
+     * @return void
+     */
+    #[\ReturnTypeWillChange]
     public function rewind()
     {
         \reset($this->ids);
     }
 
+    /**
+     * @return mixed
+     */
+    #[\ReturnTypeWillChange]
     public function current()
     {
         return $this->container[\current($this->ids)];
     }
 
+    /**
+     * @return mixed
+     */
+    #[\ReturnTypeWillChange]
     public function key()
     {
         return \current($this->ids);
     }
 
+    /**
+     * @return void
+     */
+    #[\ReturnTypeWillChange]
     public function next()
     {
         \next($this->ids);
     }
 
+    /**
+     * @return bool
+     */
+    #[\ReturnTypeWillChange]
     public function valid()
     {
         return null !== \key($this->ids);
diff --git a/pimple/pimple/src/Pimple/ServiceProviderInterface.php b/pimple/pimple/src/Pimple/ServiceProviderInterface.php
index c004594b..abf90d82 100644
--- a/pimple/pimple/src/Pimple/ServiceProviderInterface.php
+++ b/pimple/pimple/src/Pimple/ServiceProviderInterface.php
@@ -39,8 +39,6 @@ interface ServiceProviderInterface
      *
      * This method should only be used to configure services and parameters.
      * It should not get services.
-     *
-     * @param Container $pimple A container instance
      */
     public function register(Container $pimple);
 }
