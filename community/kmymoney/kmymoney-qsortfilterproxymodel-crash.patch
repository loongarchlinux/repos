diff --git a/kmymoney/converter/mymoneystatementreader.cpp b/kmymoney/converter/mymoneystatementreader.cpp
index 5de39e146..8a03ebac9 100644
--- a/kmymoney/converter/mymoneystatementreader.cpp
+++ b/kmymoney/converter/mymoneystatementreader.cpp
@@ -1055,8 +1055,8 @@ void MyMoneyStatementReader::processTransactionEntry(const MyMoneyStatement::Tra
           filterProxyModel->addAccountGroup(QVector<Account::Type> {Account::Type::Asset, Account::Type::Liability, Account::Type::Equity, Account::Type::Income, Account::Type::Expense});
 
           auto const model = Models::instance()->accountsModel();
-          filterProxyModel->setSourceModel(model);
           filterProxyModel->setSourceColumns(model->getColumns());
+          filterProxyModel->setSourceModel(model);
           filterProxyModel->sort((int)eAccountsModel::Column::Account);
 
           QPointer<KMyMoneyAccountCombo> accountCombo = new KMyMoneyAccountCombo(filterProxyModel);
diff --git a/kmymoney/dialogs/kaccountselectdlg.cpp b/kmymoney/dialogs/kaccountselectdlg.cpp
index c051611a6..67cdbe120 100644
--- a/kmymoney/dialogs/kaccountselectdlg.cpp
+++ b/kmymoney/dialogs/kaccountselectdlg.cpp
@@ -135,8 +135,8 @@ KAccountSelectDlg::KAccountSelectDlg(const eDialogs::Category accountType, const
   filterProxyModel->addAccountGroup(accountTypes);
 
   auto model = Models::instance()->accountsModel();
-  filterProxyModel->setSourceModel(model);
   filterProxyModel->setSourceColumns(model->getColumns());
+  filterProxyModel->setSourceModel(model);
   filterProxyModel->sort((int)eAccountsModel::Column::Account);
 
   d->ui->m_accountSelector->setModel(filterProxyModel);
diff --git a/kmymoney/dialogs/knewaccountdlg.cpp b/kmymoney/dialogs/knewaccountdlg.cpp
index ef5dc84aa..65455982a 100644
--- a/kmymoney/dialogs/knewaccountdlg.cpp
+++ b/kmymoney/dialogs/knewaccountdlg.cpp
@@ -136,8 +136,8 @@ public:
     m_filterProxyModel->addAccountGroup(filterAccountGroup);
     m_filterProxyModel->setCurrentAccountId(m_account.id());
     auto const model = Models::instance()->accountsModel();
-    m_filterProxyModel->setSourceModel(model);
     m_filterProxyModel->setSourceColumns(model->getColumns());
+    m_filterProxyModel->setSourceModel(model);
     m_filterProxyModel->setDynamicSortFilter(true);
 
     ui->m_parentAccounts->setModel(m_filterProxyModel);
diff --git a/kmymoney/views/kgloballedgerview_p.h b/kmymoney/views/kgloballedgerview_p.h
index 156a3cd0d..1104910bd 100644
--- a/kmymoney/views/kgloballedgerview_p.h
+++ b/kmymoney/views/kgloballedgerview_p.h
@@ -283,8 +283,8 @@ public:
     m_filterProxyModel = new AccountNamesFilterProxyModel(q);
     m_filterProxyModel->addAccountGroup(QVector<eMyMoney::Account::Type> {eMyMoney::Account::Type::Asset, eMyMoney::Account::Type::Liability, eMyMoney::Account::Type::Equity});
     auto const model = Models::instance()->accountsModel();
-    m_filterProxyModel->setSourceModel(model);
     m_filterProxyModel->setSourceColumns(model->getColumns());
+    m_filterProxyModel->setSourceModel(model);
     m_filterProxyModel->sort((int)eAccountsModel::Column::Account);
 
     // create the toolbar frame at the top of the view
diff --git a/kmymoney/views/kinvestmentview_p.h b/kmymoney/views/kinvestmentview_p.h
index 288c76817..5d879d9d4 100644
--- a/kmymoney/views/kinvestmentview_p.h
+++ b/kmymoney/views/kinvestmentview_p.h
@@ -116,8 +116,8 @@ public:
     m_accountsProxyModel->addAccountType(eMyMoney::Account::Type::Investment);
     m_accountsProxyModel->setHideEquityAccounts(false);
     auto const model = Models::instance()->accountsModel();
-    m_accountsProxyModel->setSourceModel(model);
     m_accountsProxyModel->setSourceColumns(model->getColumns());
+    m_accountsProxyModel->setSourceModel(model);
     m_accountsProxyModel->sort((int)eAccountsModel::Column::Account);
     ui->m_accountComboBox->setModel(m_accountsProxyModel);
     ui->m_accountComboBox->expandAll();
diff --git a/kmymoney/views/kpayeesview_p.h b/kmymoney/views/kpayeesview_p.h
index 9156b570f..b47779f6a 100644
--- a/kmymoney/views/kpayeesview_p.h
+++ b/kmymoney/views/kpayeesview_p.h
@@ -157,8 +157,8 @@ public:
     m_filterProxyModel->addAccountGroup(QVector<eMyMoney::Account::Type> {eMyMoney::Account::Type::Asset, eMyMoney::Account::Type::Liability, eMyMoney::Account::Type::Income, eMyMoney::Account::Type::Expense, eMyMoney::Account::Type::Equity});
 
     auto const model = Models::instance()->accountsModel();
-    m_filterProxyModel->setSourceModel(model);
     m_filterProxyModel->setSourceColumns(model->getColumns());
+    m_filterProxyModel->setSourceModel(model);
     m_filterProxyModel->sort((int)eAccountsModel::Column::Account);
     ui->comboDefaultCategory->setModel(m_filterProxyModel);
 
diff --git a/kmymoney/views/newspliteditor.cpp b/kmymoney/views/newspliteditor.cpp
index 6ba378f4b..edd8a445e 100644
--- a/kmymoney/views/newspliteditor.cpp
+++ b/kmymoney/views/newspliteditor.cpp
@@ -212,8 +212,8 @@ NewSplitEditor::NewSplitEditor(QWidget* parent, const QString& counterAccountId)
   d->accountsModel->addAccountGroup(QVector<eMyMoney::Account::Type> {eMyMoney::Account::Type::Asset, eMyMoney::Account::Type::Liability, eMyMoney::Account::Type::Income, eMyMoney::Account::Type::Expense, eMyMoney::Account::Type::Equity});
   d->accountsModel->setHideEquityAccounts(false);
   auto const model = Models::instance()->accountsModel();
-  d->accountsModel->setSourceModel(model);
   d->accountsModel->setSourceColumns(model->getColumns());
+  d->accountsModel->setSourceModel(model);
   d->accountsModel->sort((int)eAccountsModel::Column::Account);
   d->ui->accountCombo->setModel(d->accountsModel);
 
diff --git a/kmymoney/views/newtransactioneditor.cpp b/kmymoney/views/newtransactioneditor.cpp
index 6f52b7a73..39e2eab0a 100644
--- a/kmymoney/views/newtransactioneditor.cpp
+++ b/kmymoney/views/newtransactioneditor.cpp
@@ -368,8 +368,8 @@ NewTransactionEditor::NewTransactionEditor(QWidget* parent, const QString& accou
 
   d->accountsModel->addAccountGroup(QVector<eMyMoney::Account::Type> {eMyMoney::Account::Type::Asset, eMyMoney::Account::Type::Liability, eMyMoney::Account::Type::Income, eMyMoney::Account::Type::Expense, eMyMoney::Account::Type::Equity});
   d->accountsModel->setHideEquityAccounts(false);
-  d->accountsModel->setSourceModel(model);
   d->accountsModel->setSourceColumns(model->getColumns());
+  d->accountsModel->setSourceModel(model);
   d->accountsModel->sort((int)eAccountsModel::Column::Account);
   d->ui->accountCombo->setModel(d->accountsModel);
 
diff --git a/kmymoney/views/simpleledgerview.cpp b/kmymoney/views/simpleledgerview.cpp
index 3b79e0e2b..44427f112 100644
--- a/kmymoney/views/simpleledgerview.cpp
+++ b/kmymoney/views/simpleledgerview.cpp
@@ -107,8 +107,8 @@ public:
 
     accountsModel->setHideEquityAccounts(false);
     auto const model = Models::instance()->accountsModel();
-    accountsModel->setSourceModel(model);
     accountsModel->setSourceColumns(model->getColumns());
+    accountsModel->setSourceModel(model);
     accountsModel->sort((int)eAccountsModel::Column::Account);
     ui->accountCombo->setModel(accountsModel);
 
diff --git a/kmymoney/widgets/kmymoneyaccounttreeview.cpp b/kmymoney/widgets/kmymoneyaccounttreeview.cpp
index 12a199c9b..665925ce4 100644
--- a/kmymoney/widgets/kmymoneyaccounttreeview.cpp
+++ b/kmymoney/widgets/kmymoneyaccounttreeview.cpp
@@ -179,8 +179,8 @@ AccountsViewProxyModel *KMyMoneyAccountTreeView::init(View view)
     institutionsModel->setColumnVisibility(column, true);
   }
 
-  d->m_model->setSourceModel(sourceModel);
   d->m_model->setSourceColumns(sourceModel->getColumns());
+  d->m_model->setSourceModel(sourceModel);
   d->m_model->setFilterCaseSensitivity(Qt::CaseInsensitive);
   d->m_model->setSortLocaleAware(true);
   setModel(d->m_model);
diff --git a/kmymoney/wizards/newaccountwizard/khierarchypage.cpp b/kmymoney/wizards/newaccountwizard/khierarchypage.cpp
index d9c83ae73..bd863c2d7 100644
--- a/kmymoney/wizards/newaccountwizard/khierarchypage.cpp
+++ b/kmymoney/wizards/newaccountwizard/khierarchypage.cpp
@@ -65,8 +65,8 @@ namespace NewAccountWizard
     d->m_filterProxyModel->setHideEquityAccounts(!KMyMoneySettings::expertMode());
     d->m_filterProxyModel->addAccountGroup(QVector<Account::Type> {Account::Type::Asset, Account::Type::Liability});
     auto const model = Models::instance()->accountsModel();
-    d->m_filterProxyModel->setSourceModel(model);
     d->m_filterProxyModel->setSourceColumns(model->getColumns());
+    d->m_filterProxyModel->setSourceModel(model);
     d->m_filterProxyModel->setDynamicSortFilter(true);
 
     d->ui->m_parentAccounts->setModel(d->m_filterProxyModel);
