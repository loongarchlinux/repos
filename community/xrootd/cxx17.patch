diff --color -aur --color xrootd-5.2.0-old/bindings/python/setup.py.in xrootd-5.2.0-new/bindings/python/setup.py.in
--- xrootd-5.2.0-old/bindings/python/setup.py.in	2021-06-09 15:59:33.172986312 +0300
+++ xrootd-5.2.0-new/bindings/python/setup.py.in	2021-06-09 16:04:23.386332431 +0300
@@ -8,15 +8,15 @@
 # Remove the "-Wstrict-prototypes" compiler option, which isn't valid for C++.
 cfg_vars = sysconfig.get_config_vars()
 opt = cfg_vars["OPT"]
-cfg_vars["OPT"] = " ".join( flag for flag in opt.split() if flag not in ['-Wstrict-prototypes' ${CLANG_PROHIBITED} ] ) + " --std=c++0x"
+cfg_vars["OPT"] = " ".join( flag for flag in opt.split() if flag not in ['-Wstrict-prototypes' ${CLANG_PROHIBITED} ] ) + " --std=c++17"
 
 cflags = cfg_vars["CFLAGS"]
-cfg_vars["CFLAGS"] = " ".join( flag for flag in cflags.split() if flag not in ['-Wstrict-prototypes' ${CLANG_PROHIBITED} ] ) + " --std=c++0x"
+cfg_vars["CFLAGS"] = " ".join( flag for flag in cflags.split() if flag not in ['-Wstrict-prototypes' ${CLANG_PROHIBITED} ] ) + " --std=c++17"
 
 # pypy doesn't define PY_CFLAGS so skip it if it's missing
 if "PY_CFLAGS" in cfg_vars:
   py_cflags = cfg_vars["PY_CFLAGS"]
-  cfg_vars["PY_CFLAGS"] = " ".join( flag for flag in py_cflags.split() if flag not in ['-Wstrict-prototypes' ${CLANG_PROHIBITED} ] ) + " --std=c++0x"
+  cfg_vars["PY_CFLAGS"] = " ".join( flag for flag in py_cflags.split() if flag not in ['-Wstrict-prototypes' ${CLANG_PROHIBITED} ] ) + " --std=c++17"
 
 ccl=cfg_vars["CC"].split()
 ccl[0]="${CMAKE_C_COMPILER}"
diff --color -aur --color xrootd-5.2.0-old/src/XrdCeph/cmake/XRootDOSDefs.cmake xrootd-5.2.0-new/src/XrdCeph/cmake/XRootDOSDefs.cmake
--- xrootd-5.2.0-old/src/XrdCeph/cmake/XRootDOSDefs.cmake	2021-06-09 15:59:33.186319646 +0300
+++ xrootd-5.2.0-new/src/XrdCeph/cmake/XRootDOSDefs.cmake	2021-06-09 16:00:58.342990071 +0300
@@ -11,7 +11,7 @@
 # GCC
 #-------------------------------------------------------------------------------
 if( CMAKE_COMPILER_IS_GNUCXX )
-  set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11" )
+  set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17" )
   set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Werror" )
   set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-parameter" )
   # gcc 4.1 is retarded
diff --color -aur --color xrootd-5.2.0-old/src/XrdClHttp/CMakeLists.txt xrootd-5.2.0-new/src/XrdClHttp/CMakeLists.txt
--- xrootd-5.2.0-old/src/XrdClHttp/CMakeLists.txt	2021-06-09 15:59:33.192986313 +0300
+++ xrootd-5.2.0-new/src/XrdClHttp/CMakeLists.txt	2021-06-09 16:03:54.576331167 +0300
@@ -6,7 +6,7 @@
     ${PROJECT_SOURCE_DIR}/src
     ${PROJECT_SOURCE_DIR}/cmake)
 
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
 
 # Defaults
 if( NOT XRDCLHTTP_SUBMODULE )
diff --color -aur --color xrootd-5.2.0-old/tests/XrdClTests/tls/CMakeLists.txt xrootd-5.2.0-new/tests/XrdClTests/tls/CMakeLists.txt
--- xrootd-5.2.0-old/tests/XrdClTests/tls/CMakeLists.txt	2021-06-09 15:59:33.219652981 +0300
+++ xrootd-5.2.0-new/tests/XrdClTests/tls/CMakeLists.txt	2021-06-09 16:04:42.392999919 +0300
@@ -1,7 +1,7 @@
 
 include( XRootDCommon )
 
-set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x" )
+set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17" )
 
 #-------------------------------------------------------------------------------
 # xrdcopy
diff --color -aur --color xrootd-5.2.0-old/src/XrdSsi/XrdSsiAtomics.hh xrootd-5.2.0-new/src/XrdSsi/XrdSsiAtomics.hh
--- xrootd-5.2.0-old/src/XrdSsi/XrdSsiAtomics.hh	2021-06-09 16:10:26.399681671 +0300
+++ xrootd-5.2.0-new/src/XrdSsi/XrdSsiAtomics.hh	2021-06-09 16:11:21.983017456 +0300
@@ -39,7 +39,7 @@
 #if __cplusplus >= 201103L
 #include <atomic>
 #define Atomic(type)    std::atomic<type>
-#define Atomic_IMP "C++11"
+#define Atomic_IMP "C++17"
 #define Atomic_BEG(x)
 #define Atomic_DEC(x)          x.fetch_sub(1,std::memory_order_relaxed)
 #define Atomic_GET(x)          x.load(std::memory_order_relaxed)
