diff --git a/src/sage/features/lrs.py b/src/sage/features/lrs.py
index be62d14..ab1871a 100644
--- a/src/sage/features/lrs.py
+++ b/src/sage/features/lrs.py
@@ -54,9 +54,12 @@ class Lrs(Executable):
             return FeatureTestResult(self, False,
                 reason="Call to `{command}` failed with exit code {e.returncode}.".format(command=" ".join(command), e=e))
 
-        expected = "Volume= 1"
-        if lines.find(expected) == -1:
+        expected_list = ["Volume= 1", "Volume=1"]
+        if all(lines.find(expected) == -1 for expected in expected_list):
+            print(lines)
             return FeatureTestResult(self, False,
-                reason="Output of `{command}` did not contain the expected result `{expected}`.".format(command=" ".join(command), expected=expected))
+                reason="Output of `{command}` did not contain the expected result {expected}.".format(
+                    command=" ".join(command),
+                    expected=" or ".join(expected_list)))
 
         return FeatureTestResult(self, True)
diff --git a/src/sage/game_theory/parser.py b/src/sage/game_theory/parser.py
index 09596a9..00cc8ef 100644
--- a/src/sage/game_theory/parser.py
+++ b/src/sage/game_theory/parser.py
@@ -222,7 +222,10 @@ class Parser():
         equilibria = []
         from sage.misc.sage_eval import sage_eval
         from itertools import groupby
-        for collection in [list(x[1]) for x in groupby(self.raw_string[7:], lambda x: x == '\n')]:
+        lines = iter(self.raw_string)
+        while not next(lines).startswith("*****"):
+            pass
+        for collection in [list(x[1]) for x in groupby(lines, lambda x: x == '\n')]:
             if collection[0].startswith('2'):
                 s1 = tuple([sage_eval(k) for k in collection[-1].split()][1:-1])
                 for s2 in collection[:-1]:
