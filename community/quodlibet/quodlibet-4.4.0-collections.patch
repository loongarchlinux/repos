diff -ruN a/quodlibet/packages/raven/context.py b/quodlibet/packages/raven/context.py
--- a/quodlibet/packages/raven/context.py	2021-02-28 20:26:26.003186000 +0100
+++ b/quodlibet/packages/raven/context.py	2021-12-04 11:59:34.974753115 +0100
@@ -7,7 +7,10 @@
 """
 from __future__ import absolute_import
 
-from collections import Mapping, Iterable
+try:
+    from collections import abc
+except ImportError:
+    import collections as abc  # type: ignore
 from threading import local
 from weakref import ref as weakref
 
@@ -30,7 +33,7 @@
         return []
 
 
-class Context(local, Mapping, Iterable):
+class Context(local, abc.Mapping, abc.Iterable):
     """
     Stores context until cleared.
 
diff -ruN a/quodlibet/player/gstbe/util.py b/quodlibet/player/gstbe/util.py
--- a/quodlibet/player/gstbe/util.py	2021-02-28 20:26:26.007186000 +0100
+++ b/quodlibet/player/gstbe/util.py	2021-12-04 11:59:34.978086457 +0100
@@ -6,7 +6,10 @@
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 
-import collections
+try:
+    from collections import abc
+except ImportError:
+    import collections as abc  # type: ignore
 import subprocess
 from enum import Enum
 from typing import Iterable, Tuple
@@ -183,7 +186,7 @@
     return pipe, pipeline_desc
 
 
-class TagListWrapper(collections.Mapping):
+class TagListWrapper(abc.Mapping):
     def __init__(self, taglist, merge=False):
         self._list = taglist
         self._merge = merge
diff -ruN a/quodlibet/util/collection.py b/quodlibet/util/collection.py
--- a/quodlibet/util/collection.py	2021-02-28 20:26:26.015186000 +0100
+++ b/quodlibet/util/collection.py	2021-12-04 12:01:23.532557722 +0100
@@ -24,7 +24,10 @@
                                       AudioFile)
 from quodlibet.formats._audio import PEOPLE as _PEOPLE
 from quodlibet.pattern import Pattern
-from collections import Iterable
+try:
+    from collections import abc
+except ImportError:
+    import collections as abc  # type: ignore
 
 from quodlibet.util import is_windows
 from quodlibet.util.path import escape_filename, unescape_filename, limit_path
@@ -332,7 +335,7 @@
 
 @hashable
 @total_ordering
-class Playlist(Collection, Iterable):
+class Playlist(Collection, abc.Iterable):
     """A Playlist is a `Collection` that has list-like features
     Songs can appear more than once.
     """
@@ -340,7 +343,7 @@
     __instances: Set["Playlist"] = set()
 
     @classmethod
-    def playlists_featuring(cls, song: AudioFile) -> Iterable[Playlist]:
+    def playlists_featuring(cls, song: AudioFile) -> abc.Iterable[Playlist]:
         """Returns a generator yielding playlists in which this song appears"""
         return (pl for pl in cls.__instances if song in pl._list)
 
diff -ruN a/quodlibet/util/collections.py b/quodlibet/util/collections.py
--- a/quodlibet/util/collections.py	2021-02-28 20:26:26.015186000 +0100
+++ b/quodlibet/util/collections.py	2021-12-04 12:03:18.200303036 +0100
@@ -9,7 +9,11 @@
 
 from __future__ import absolute_import
 
-from collections import MutableSequence, defaultdict
+try:
+    from collections import abc
+except ImportError:
+    import collections as abc  # type: ignore
+from collections import defaultdict
 
 from .misc import total_ordering
 
@@ -139,7 +143,7 @@
         return self.__dict.keys()
 
 
-class HashedList(MutableSequence):
+class HashedList(abc.MutableSequence):
     """A list-like collection that can only take hashable items
     and provides fast membership tests.
 
diff -ruN a/quodlibet/util/http.py b/quodlibet/util/http.py
--- a/quodlibet/util/http.py	2021-02-28 20:26:26.015186000 +0100
+++ b/quodlibet/util/http.py	2021-12-04 12:13:21.410973754 +0100
@@ -7,7 +7,7 @@
 # (at your option) any later version.
 
 import json
-from collections import Callable
+from collections.abc import Callable
 from typing import Optional, Any
 
 from gi.repository import Soup, Gio, GLib, GObject
