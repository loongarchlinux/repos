diff --git a/girwriter.vala b/girwriter.vala
index 51af0b7..33c016b 100644
--- a/girwriter.vala
+++ b/girwriter.vala
@@ -1,25 +1,29 @@
-/* Copyright 2011-2015 -- pancake */
+/* Copyright 2011-2019 -- pancake */
 
 using Vala;
 
 public class GirWriter : ValabindWriter {
 	public GLib.List<string> includefiles = new GLib.List<string> ();
 	public GLib.List<Method> methods;
 	string classname = "";
 	string classcname;
 	string externs = "";
 	string statics = "";
 	string extends = "";
 	string enums = "";
 	string nspace;
 
 	public GirWriter () {
 	}
 
 	public override string get_filename (string base_name) {
 		return base_name+".gir";
 	}
 
+	public override void write(string file) {
+		context.accept (this);
+	}
+
 	string get_alias (string name) {
 		string oname = name;
 		switch (name) {
diff --git a/gowriter.vala b/gowriter.vala
index 56d9fbe..0fb09a6 100644
--- a/gowriter.vala
+++ b/gowriter.vala
@@ -214,7 +214,11 @@ public class GoNamer {
 	}
 
 	private string mangle_datatype(DataType d) {
+#if VALA_0_48
+		string ret = d.type_symbol.name;  // i think should unify with get_type_declaration?
+#else
 		string ret = d.data_type.name;  // i think should unify with get_type_declaration?
+#endif
 		if (d.get_type_arguments().size > 0) {
 			foreach(var dd in d.get_type_arguments()) {
 				ret += "_";
diff --git a/nodeffiwriter.vala b/nodeffiwriter.vala
index 84fede0..eba6329 100644
--- a/nodeffiwriter.vala
+++ b/nodeffiwriter.vala
@@ -85,8 +85,13 @@ public class NodeFFIWriter : ValabindWriter {
 
 		string _type = type.to_string ();
 		string local_ns_pfx = ns_pfx;
+#if VALA_0_48
+		if (type.type_symbol != null && type.type_symbol.parent_symbol is Namespace) {
+			Namespace local_ns = (Namespace)type.type_symbol.parent_symbol;
+#else
 		if (type.data_type != null && type.data_type.parent_symbol is Namespace) {
 			Namespace local_ns = (Namespace)type.data_type.parent_symbol;
+#endif
 			if (use_namespace(local_ns))
 				local_ns_pfx = local_ns.get_full_name()+".";
 		}
