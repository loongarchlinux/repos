diff --git a/src/sage/plot/contour_plot.py b/src/sage/plot/contour_plot.py
index a7533fa3d9..12a2b1f670 100644
--- a/src/sage/plot/contour_plot.py
+++ b/src/sage/plot/contour_plot.py
@@ -223,7 +223,7 @@ class ContourPlot(GraphicPrimitive):
                 cb.add_lines(CS)
 
 
-@suboptions('colorbar', orientation='vertical', format=None, spacing=None)
+@suboptions('colorbar', orientation='vertical', format=None, spacing='uniform')
 @suboptions('label', fontsize=9, colors='blue', inline=None, inline_spacing=3,
             fmt="%1.2f")
 @options(plot_points=100, fill=True, contours=None, linewidths=None,
diff --git a/src/sage/plot/colors.py b/src/sage/plot/colors.py
index 1860b6c948..af6fc7ec64 100644
--- a/src/sage/plot/colors.py
+++ b/src/sage/plot/colors.py
@@ -20,7 +20,7 @@ comprises the "official" W3C CSS3_ / SVG_ colors.
 For a list of color maps in Sage, evaluate::
 
     sage: sorted(colormaps)
-    [u'Accent', u'Accent_r', u'Blues', u'Blues_r', u'BrBG', u'BrBG_r', ...]
+    [u'Accent', u'Blues', u'BrBG', ...]
 
 These are imported from matplotlib's cm_ module.
 
@@ -1374,7 +1374,7 @@ def get_cmap(cmap):
     and color names.  For a list of map names, evaluate::
 
         sage: sorted(colormaps)
-        [u'Accent', u'Accent_r', u'Blues', u'Blues_r', ...]
+        [u'Accent', u'Blues', ...]
 
     See :func:`rgbcolor` for valid list/tuple element formats.
 
@@ -1468,7 +1468,7 @@ class Colormaps(collections.MutableMapping):
     For a list of map names, evaluate::
 
         sage: sorted(colormaps)
-        [u'Accent', u'Accent_r', u'Blues', u'Blues_r', ...]
+        [u'Accent', u'Blues', ...]
     """
     def __init__(self):
         """
@@ -1495,7 +1495,7 @@ class Colormaps(collections.MutableMapping):
             sage: len(maps.maps)
             0
             sage: maps.load_maps()
-            sage: len(maps.maps)>130
+            sage: len(maps.maps)>65
             True
         """
         global cm
@@ -1539,7 +1539,7 @@ class Colormaps(collections.MutableMapping):
 
             sage: from sage.plot.colors import Colormaps
             sage: maps = Colormaps()
-            sage: len(maps)>130
+            sage: len(maps)>65
             True
         """
         self.load_maps()
