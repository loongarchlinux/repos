diff --git a/source/backend/povray.cpp b/source/backend/povray.cpp
index 7692eff8..7b8bb463 100644
--- a/source/backend/povray.cpp
+++ b/source/backend/povray.cpp
@@ -68,7 +68,6 @@
 		extern "C" const char* TIFFGetVersion(void);
 	#endif
     #ifndef OPENEXR_MISSING
-        #include <IlmBaseConfig.h>
         #include <OpenEXRConfig.h>
         // NOTE:
         //  Versions of OpenEXR and IlmImf prior to 1.7.1 do not seem to have a way to get the version number,
diff --git a/source/base/image/openexr.cpp b/source/base/image/openexr.cpp
index 5050a897..40002b8f 100644
--- a/source/base/image/openexr.cpp
+++ b/source/base/image/openexr.cpp
@@ -105,7 +105,7 @@ class POV_EXR_OStream : public Imf::OStream
 				throw POV_EXCEPTION(kFileDataErr, "Error while writing EXR output");
 		}
 
-		Int64 tellp()
+		uint64_t tellp()
 		{
 			unsigned long pos = os.tellg();
 			if((int) pos == -1)
@@ -113,7 +113,7 @@ class POV_EXR_OStream : public Imf::OStream
 			return(pos);
 		}
 
-		void seekp(Int64 pos)
+		void seekp(uint64_t pos)
 		{
 			if(!os.seekg((unsigned long)pos))
 				throw POV_EXCEPTION(kFileDataErr, "Error when writing EXR output");
@@ -147,7 +147,7 @@ class POV_EXR_IStream : public Imf::IStream
 			return (is.tellg() < fsize);
 		}
 
-		Int64 tellg()
+		uint64_t tellg()
 		{
 			unsigned long pos = is.tellg();
 			if((int)pos == -1)
@@ -155,7 +155,7 @@ class POV_EXR_IStream : public Imf::IStream
 			return pos;
 		}
 
-		void seekg(Int64 pos)
+		void seekg(uint64_t pos)
 		{
 			if(!is.seekg((unsigned long)pos))
 				throw POV_EXCEPTION(kFileDataErr, "Error while reading EXR file");
diff --git a/unix/config/ax_check_openexr.m4 b/unix/config/ax_check_openexr.m4
index 69a2cb64..40ce88bc 100644
--- a/unix/config/ax_check_openexr.m4
+++ b/unix/config/ax_check_openexr.m4
@@ -56,7 +56,7 @@ AC_DEFUN([AX_CHECK_OPENEXR],
       # check include file
       AC_CHECK_HEADER(
         [OpenEXR/ImfCRgbaFile.h],
-        [AC_CHECK_LIB([IlmImf], [ImfInputReadPixels], [], [ax_check_openexr="not found"])],
+        [AC_CHECK_LIB([OpenEXR], [ImfInputReadPixels], [], [ax_check_openexr="not found"])],
         [ax_check_openexr="no headers"]
       )
     fi
