From 45205fe0d2cb8d3fda607d8f4f76ef4748ee49b1 Mon Sep 17 00:00:00 2001
From: Andrey Mokhov <andrey.mokhov@gmail.com>
Date: Sun, 14 Mar 2021 20:52:03 +0000
Subject: [PATCH] Add GHC 9.0 to CI, bump copyright year (#267)

---
 .github/workflows/ci.yml                              | 4 ++--
 LICENSE                                               | 2 +-
 algebraic-graphs.cabal                                | 4 ++--
 test/Algebra/Graph/Test/AdjacencyIntMap.hs            | 2 +-
 test/Algebra/Graph/Test/AdjacencyMap.hs               | 2 +-
 test/Algebra/Graph/Test/Graph.hs                      | 4 ++--
 test/Algebra/Graph/Test/Relation.hs                   | 8 ++++----
 test/Algebra/Graph/Test/Relation/SymmetricRelation.hs | 2 +-
 test/Algebra/Graph/Test/Undirected.hs                 | 2 +-
 9 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/LICENSE b/LICENSE
index dc5ac3f4..e81307aa 100644
--- a/LICENSE
+++ b/LICENSE
@@ -1,6 +1,6 @@
 MIT License
 
-Copyright (c) 2016-2020 Andrey Mokhov
+Copyright (c) 2016-2021 Andrey Mokhov
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
diff --git a/test/Algebra/Graph/Test/AdjacencyIntMap.hs b/test/Algebra/Graph/Test/AdjacencyIntMap.hs
index 08a85ee6..3fef0264 100644
--- a/test/Algebra/Graph/Test/AdjacencyIntMap.hs
+++ b/test/Algebra/Graph/Test/AdjacencyIntMap.hs
@@ -26,7 +26,7 @@ t = ("AdjacencyIntMap.", adjacencyIntMapAPI)
 testAdjacencyIntMap :: IO ()
 testAdjacencyIntMap = do
     putStrLn "\n============ AdjacencyIntMap ============"
-    test "Axioms of graphs" (axioms @ AdjacencyIntMap)
+    test "Axioms of graphs" (axioms @AdjacencyIntMap)
 
     putStrLn $ "\n============ AdjacencyIntMap.fromAdjacencyMap ============"
     test "fromAdjacencyMap == stars . AdjacencyMap.adjacencyList" $ \x ->
diff --git a/test/Algebra/Graph/Test/AdjacencyMap.hs b/test/Algebra/Graph/Test/AdjacencyMap.hs
index 267abda3..6cc8f46e 100644
--- a/test/Algebra/Graph/Test/AdjacencyMap.hs
+++ b/test/Algebra/Graph/Test/AdjacencyMap.hs
@@ -36,7 +36,7 @@ type AI = AdjacencyMap Int
 testAdjacencyMap :: IO ()
 testAdjacencyMap = do
     putStrLn "\n============ AdjacencyMap ============"
-    test "Axioms of graphs" (axioms @ AI)
+    test "Axioms of graphs" (axioms @AI)
 
     testConsistent        t
     testShow              t
diff --git a/test/Algebra/Graph/Test/Graph.hs b/test/Algebra/Graph/Test/Graph.hs
index 516effc7..7db781dc 100644
--- a/test/Algebra/Graph/Test/Graph.hs
+++ b/test/Algebra/Graph/Test/Graph.hs
@@ -35,8 +35,8 @@ type G = Graph Int
 testGraph :: IO ()
 testGraph = do
     putStrLn "\n============ Graph ============"
-    test "Axioms of graphs"   (axioms   @ G)
-    test "Theorems of graphs" (theorems @ G)
+    test "Axioms of graphs"   (axioms   @G)
+    test "Theorems of graphs" (theorems @G)
 
     testBasicPrimitives t
     testIsSubgraphOf    t
diff --git a/test/Algebra/Graph/Test/Relation.hs b/test/Algebra/Graph/Test/Relation.hs
index 6c200e75..d1ca15cf 100644
--- a/test/Algebra/Graph/Test/Relation.hs
+++ b/test/Algebra/Graph/Test/Relation.hs
@@ -34,7 +34,7 @@ type RI = Relation Int
 testRelation :: IO ()
 testRelation = do
     putStrLn "\n============ Relation ============"
-    test "Axioms of graphs" $ size10 $ axioms @ RI
+    test "Axioms of graphs" $ size10 $ axioms @RI
 
     testConsistent      t
     testShow            t
@@ -48,18 +48,18 @@ testRelation = do
 
     putStrLn "\n============ ReflexiveRelation ============"
     test "Axioms of reflexive graphs" $ size10 $
-        reflexiveAxioms @ (ReflexiveRelation Int)
+        reflexiveAxioms @(ReflexiveRelation Int)
 
     putStrLn "\n============ TransitiveRelation ============"
     test "Axioms of transitive graphs" $ size10 $
-        transitiveAxioms @ (TransitiveRelation Int)
+        transitiveAxioms @(TransitiveRelation Int)
 
     test "path xs == (clique xs :: TransitiveRelation Int)" $ size10 $ \xs ->
           C.path xs == (C.clique xs :: TransitiveRelation Int)
 
     putStrLn "\n============ PreorderRelation ============"
     test "Axioms of preorder graphs" $ size10 $
-        preorderAxioms @ (PreorderRelation Int)
+        preorderAxioms @(PreorderRelation Int)
 
     test "path xs == (clique xs :: PreorderRelation Int)" $ size10 $ \xs ->
           C.path xs == (C.clique xs :: PreorderRelation Int)
diff --git a/test/Algebra/Graph/Test/Relation/SymmetricRelation.hs b/test/Algebra/Graph/Test/Relation/SymmetricRelation.hs
index b66db9de..ba0f9421 100644
--- a/test/Algebra/Graph/Test/Relation/SymmetricRelation.hs
+++ b/test/Algebra/Graph/Test/Relation/SymmetricRelation.hs
@@ -32,7 +32,7 @@ type SRI = Relation Int
 testSymmetricRelation :: IO ()
 testSymmetricRelation = do
     putStrLn "\n============ Symmetric.Relation ============"
-    test "Axioms of undirected graphs" $ size10 $ undirectedAxioms @ SRI
+    test "Axioms of undirected graphs" $ size10 $ undirectedAxioms @SRI
 
     testConsistent    t
     testSymmetricShow t
diff --git a/test/Algebra/Graph/Test/Undirected.hs b/test/Algebra/Graph/Test/Undirected.hs
index 2746a25b..ecfedbdf 100644
--- a/test/Algebra/Graph/Test/Undirected.hs
+++ b/test/Algebra/Graph/Test/Undirected.hs
@@ -34,7 +34,7 @@ type AGI = G.Graph Int
 testUndirected :: IO ()
 testUndirected = do
     putStrLn "\n============ Graph.Undirected ============"
-    test "Axioms of undirected graphs" $ size10 $ undirectedAxioms @ G
+    test "Axioms of undirected graphs" $ size10 $ undirectedAxioms @G
 
     testSymmetricShow t
 
