diff --git a/h5py/_conv.pyx b/h5py/_conv.pyx
index 9bc8f5cf8..93cc6fdf4 100644
--- a/h5py/_conv.pyx
+++ b/h5py/_conv.pyx
@@ -400,7 +400,7 @@ cdef int conv_regref2pyref(void* ipt, void* opt, void* bkg, void* priv) except -
     cdef PyObject* bkg_obj0

     memcpy(&bkg_obj0, bkg_obj, sizeof(bkg_obj0));
-    memcpy(ref.ref.reg_ref, buf_ref, sizeof(hdset_reg_ref_t))
+    memcpy(ref.ref.reg_ref.data, buf_ref, sizeof(hdset_reg_ref_t))

     ref.typecode = H5R_DATASET_REGION

@@ -430,7 +430,7 @@ cdef int conv_pyref2regref(void* ipt, void* opt, void* bkg, void* priv) except -
         if not isinstance(obj, RegionReference):
             raise TypeError("Can't convert incompatible object to HDF5 region reference")
         ref = <RegionReference>(buf_obj0)
-        memcpy(buf_ref, ref.ref.reg_ref, sizeof(hdset_reg_ref_t))
+        memcpy(buf_ref, ref.ref.reg_ref.data, sizeof(hdset_reg_ref_t))
     else:
         memset(buf_ref, c'\0', sizeof(hdset_reg_ref_t))

diff --git a/h5py/h5r.pxd b/h5py/h5r.pxd
index 53bbaf496..825b798fa 100644
--- a/h5py/h5r.pxd
+++ b/h5py/h5r.pxd
@@ -13,7 +13,9 @@ from .defs cimport *
 cdef extern from "hdf5.h":
 
   ctypedef haddr_t hobj_ref_t
-  ctypedef unsigned char hdset_reg_ref_t[12]
+
+cdef struct hdset_reg_ref_t:
+    uint8_t data[12] # sizeof(haddr_t) + 4 == sizeof(signed long long) + 4
 
 cdef union ref_u:
     hobj_ref_t         obj_ref
