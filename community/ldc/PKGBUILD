# Maintainer: Dan Printzell <arch@vild.io>
# Contributor: Mihails Strasuns <public@dicebot.lv>
# Contributor: Sven-Hendrik Haase <sh@lutzhaase.com>

pkgname=('ldc' 'liblphobos')
groups=('dlang' 'dlang-ldc')
pkgver=1.28.0
_pkgcommit=6a240b66fd5fcaccd85fb50a2717767dd37ef17a
_dversion=2.098.0
_clangversion=13.0.0 # related to where ldc2 looks for compiler-rt sanitizers
epoch=3
pkgrel=3
pkgdesc="A D Compiler based on the LLVM Compiler Infrastructure including D runtime and libphobos2"
arch=('loongarch64' 'x86_64')
url="https://github.com/ldc-developers/ldc"
license=('BSD')
makedepends=('git' 'cmake' 'llvm' 'ldc' 'ninja')

source=(
    "git+https://github.com/ldc-developers/ldc#commit=$_pkgcommit"
    "ldc-druntime::git+https://github.com/ldc-developers/druntime.git"
    "ldc-phobos::git+https://github.com/ldc-developers/phobos.git"
    "ldc-testsuite::git+https://github.com/ldc-developers/dmd-testsuite.git"
    "keep-default-alignment-for-atomic-instructions.patch"
)

sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            '7d33b18c517e7155a44efad984f8226d6bdaa7afae121e3e905727eb73299bbf')

prepare() {
    cd "$srcdir/ldc"

    git submodule init
    git config submodule.druntime.url "$srcdir/ldc-druntime"
    git config submodule.phobos.url "$srcdir/ldc-phobos"
    git config submodule.tests/d2/dmd-testsuite.url "$srcdir/ldc-testsuite"
    git submodule update

    # https://github.com/ldc-developers/ldc/pull/3842
    patch -Np1 -i ../keep-default-alignment-for-atomic-instructions.patch

    # Set version used for path construction in getFullClangCompilerRTLibPath()
    sed -i "s/ldc::llvm_version_base/\"$_clangversion\"/" driver/linker-gcc.cpp
}

build() {
    cd "$srcdir/ldc"

    mkdir -p build && cd build

    cmake -GNinja \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_SKIP_RPATH=ON \
    -DINCLUDE_INSTALL_DIR=/usr/include/dlang/ldc \
    -DBUILD_SHARED_LIBS=BOTH \
    -DBUILD_LTO_LIBS=ON \
    -DLDC_WITH_LLD=OFF \
    -DD_COMPILER_FLAGS="-link-defaultlib-shared=false -linker=gold" \
    -DADDITIONAL_DEFAULT_LDC_SWITCHES="\"-link-defaultlib-shared\"" \
    ..
    ninja
}

check() {
    cd "$srcdir/ldc/build"
    ninja all-test-runners
}

package_ldc() {
    depends=('liblphobos' 'llvm-libs' 'gcc' 'compiler-rt')
    backup=('etc/ldc2.conf')
    provides=("d-compiler=$_dversion")

    cd "$srcdir/ldc/build"
    DESTDIR="$pkgdir" ninja install

    # move bash-completion
    mkdir -p "$pkgdir/usr/share/bash-completion/completions/"
    mv "$pkgdir/etc/bash_completion.d/ldc2" "$pkgdir/usr/share/bash-completion/completions/"
    rm -rf "$pkgdir/etc/bash_completion.d"

    # remove liblphobos files
    rm -rf "$pkgdir/usr/include"
    rm -rf "$pkgdir/usr/lib"

    # symlinks
    ln -s /usr/share/bash-completion/completions/ldc2 "$pkgdir/usr/share/bash-completion/completions/ldc"
    ln -s /usr/bin/ldc2 "$pkgdir/usr/bin/ldc"
    ln -s /usr/bin/ldmd2 "$pkgdir/usr/bin/ldmd"

    # licenses
    install -D -m644 "$srcdir/ldc/LICENSE" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_liblphobos() {
    provides=('d-runtime' 'd-stdlib')
    depends=('curl')
    options=('staticlibs' '!strip')

    cd "$srcdir/ldc/build"
    DESTDIR="$pkgdir" ninja install

    # remove ldc files
    rm -rf "$pkgdir/usr/bin/"
    rm -rf "$pkgdir/etc/"

    # licenses
    install -D -m644 "$srcdir/ldc/LICENSE" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
