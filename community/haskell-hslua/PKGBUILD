# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Arch Haskell Team <arch-haskell@haskell.org>

_hkgname=hslua
pkgname=haskell-hslua
pkgver=2.2.0
pkgrel=21
pkgdesc="A Lua language interpreter embedding in Haskell"
url="https://hslua.org"
license=("MIT")
arch=('loong64' 'x86_64')
depends=('ghc-libs' 'haskell-hslua-aeson' 'haskell-hslua-classes' 'haskell-hslua-core'
         'haskell-hslua-marshalling' 'haskell-hslua-objectorientation' 'haskell-hslua-packaging')
makedepends=('ghc' 'uusi' 'haskell-quickcheck' 'haskell-lua' 'haskell-lua-arbitrary'
             'haskell-quickcheck-instances' 'haskell-tasty' 'haskell-tasty-hslua'
             'haskell-tasty-hunit')
source=("https://hackage.haskell.org/packages/archive/${_hkgname}/${pkgver}/${_hkgname}-${pkgver}.tar.gz")
sha512sums=('cdd4ff872557ba014bb6f64a592702820e9274456c35b9f9c42fccbd279b2157b3087a5040be2bad03890934bf682c7f4d066232480e8243d5259f871514346a')

prepare() {
    cd $_hkgname-$pkgver
    gen-setup
}

build() {
    cd $_hkgname-$pkgver

    runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
        --prefix=/usr --docdir=/usr/share/doc/$pkgname --datasubdir=$pkgname --enable-tests \
        --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid --ghc-option=-fllvm
    runhaskell Setup build $MAKEFLAGS
    runhaskell Setup register --gen-script
    runhaskell Setup unregister --gen-script
    sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
    sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
    cd $_hkgname-$pkgver
    runhaskell Setup test --show-details=direct
}

package() {
    cd $_hkgname-$pkgver

    install -D -m744 register.sh "$pkgdir"/usr/share/haskell/register/$pkgname.sh
    install -D -m744 unregister.sh "$pkgdir"/usr/share/haskell/unregister/$pkgname.sh
    runhaskell Setup copy --destdir="$pkgdir"
    install -D -m644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
    rm -f "$pkgdir"/usr/share/doc/$pkgname/LICENSE
}
