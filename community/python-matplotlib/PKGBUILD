# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Maintainer: Bruno Pagani <archange@archlinux.org>
# Contributor: St√©phane Gaudreault <stephane@archlinux.org>
# Contributor: Stefan Husmann <stefan-husmann@t-online.de>
# Contributor: Angel 'angvp' Velasquez <angvp[at]archlinux.com.ve>
# Contributor: Douglas Soares de Andrade <dsa@aur.archlinux.org>

pkgname=python-matplotlib
pkgver=3.5.2
pkgrel=1
pkgdesc="A python plotting library, making publication quality plots"
arch=(loong64 x86_64)
url="https://matplotlib.org"
license=(custom)
depends=(freetype2 python-cycler python-dateutil python-fonttools python-kiwisolver python-numpy
         python-packaging python-pillow python-pyparsing qhull)
optdepends=('tk: Tk{Agg,Cairo} backends'
            'pyside2: alternative for Qt5{Agg,Cairo} backends'
            'pyside6: alternative for Qt6{Agg,Cairo} backends'
            'python-pyqt5: Qt5{Agg,Cairo} backends'
            'python-pyqt6: Qt6{Agg,Cairo} backends'
            'python-gobject: for GTK{3,4}{Agg,Cairo} backend'
            'python-wxpython: WX{Agg,Cairo} backend'
            'python-cairo: {GTK{3,4},Qt{5,6},Tk,WX}Cairo backends'
            'python-cairocffi: alternative for Cairo backends'
            'python-tornado: WebAgg backend'
            'ffmpeg: for saving movies'
            'imagemagick: for saving animated gifs'
            'ghostscript: usetex dependencies'
            'texlive-bin: usetex dependencies'
            'texlive-latexextra: usetex usage with pdflatex'
            'python-certifi: https support')
makedepends=(git python-setuptools-scm-git-archive python-certifi)
checkdepends=(python-pytest python-pytest-xdist python-pytest-runner python-pytest-rerunfailures xorg-server-xvfb
              texlive-bin texlive-core texlive-latexextra texlive-pictures ghostscript inkscape ffmpeg imagemagick
              gtk4 python-cairo python-cairocffi python-gobject python-pyqt5 pyside2 python-pyqt6 pyside6 python-tornado python-wxpython tk
              jupyter-nbconvert jupyter-nbformat python-ipykernel python-pandas python-pikepdf python-pytz)
_tag=af8c92817e9c1b5cb51bd060ceb99ed956e714c1 # git rev-parse v${pkgver}
_ftver=2.12.1
source=(git+https://github.com/matplotlib/matplotlib.git#tag=${_tag}?signed
        https://github.com/QuLogic/mpl-images/archive/v${pkgver}-with-freetype-${_ftver}/mpl-images-${pkgver}-ft${_ftver}.tar.gz
        freetype.patch)
b2sums=('SKIP'
        'b3dc00bd2e2ffb36e8d61ae570dee19a7bf54155fd91d4dc03b3f0ac439466efddc9564a27c44bb3eb9b46b7505cb4920f35c1a2c74a3ab7396a4b7bbbc6a9be'
        '0f41283060ecd070e04efa51b32321f378fbcd50d2fc3105df517f55ea5b0268f2d4494dd742e463c4790fa18ecdac26e6c6ab6adcaa134cda152a523911ece1')
validpgpkeys=(23CAB59E3332F94D26BEF0378D86E7FAE5EB0C10) # Elliott Sales de Andrade <quantum.analyst@gmail.com>

prepare() {
  cd matplotlib
  # Fix SCM detected version
  rm -r .git
  echo "Version: ${pkgver}" > PKG-INFO
  # Use system freetype and qhull
  sed -e 's|#system_freetype = False|system_freetype = True|' -e 's|#system_qhull = False|system_qhull = True|' mplsetup.cfg.template > mplsetup.cfg
  patch -p1 < ../freetype.patch # From Fedora/upstream
  # Install tests for check()
  sed -i 's|#tests = False|tests = True|' mplsetup.cfg
  # Use appropriate baseline images for tests
  for _module in matplotlib mpl_toolkits
  do
    cp -r ../mpl-images-${pkgver}-with-freetype-${_ftver}/${_module}/* lib/${_module}/tests/baseline_images/
  done
}

build() {
  cd matplotlib
  python setup.py build
}

check() {
  cd matplotlib
  python -m venv --system-site-packages test-env
  test-env/bin/python setup.py install --skip-build
  # test_ipynb: https://github.com/matplotlib/matplotlib/issues/21654 fixed but `ModuleNotFoundError: No module named 'matplotlib'`
  # test_cross_Qt_imports https://github.com/matplotlib/matplotlib/issues/23004
  xvfb-run -a -s "-screen 0 640x480x24" \
    test-env/bin/python -m pytest -ra -n auto -v --color=yes --pyargs matplotlib mpl_toolkits.tests -k 'not test_ipynb and not test_cross_Qt_imports'
}

package() {
  cd matplotlib
  python setup.py install --root "${pkgdir}" --prefix=/usr --optimize=1 --skip-build
  install -Dm644 doc/users/project/license.rst -t "${pkgdir}"/usr/share/licenses/${pkgname}/
  # Remove tests
  rm -r "${pkgdir}"$(python -c "import site; print(site.getsitepackages()[0])")/{matplotlib,mpl_toolkits}/tests/
}
