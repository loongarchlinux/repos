From 98a23b5bcc554fe651a11e6ce975d20e7c13882d Mon Sep 17 00:00:00 2001
From: Felix Yan <felixonmars@archlinux.org>
Date: Sun, 14 Oct 2018 09:15:39 +0800
Subject: [PATCH] Update cmark to 0.28.3.gfm.17 (#11)

* Update cmark to 0.28.3.gfm.17

* Attempt to get windows working again

* Fix appveyor script

* Fix travis script

* Remove old noxfile

* Nox doesn't work on Python 2, ofc

* Explictly use 32bit Python
---
 .travis.yml                                   | 19 ++++----
 appveyor.yml                                  | 46 +++++++++++++++++++
 generated/unix/cmark-gfm-extensions_export.h  | 42 +++++++++++++++++
 generated/unix/cmark-gfm_export.h             | 42 +++++++++++++++++
 generated/unix/cmark-gfm_version.h            |  7 +++
 generated/unix/cmark_export.h                 | 41 -----------------
 generated/unix/cmark_version.h                |  8 ----
 generated/unix/cmarkextensions_export.h       | 41 -----------------
 .../windows/cmark-gfm-extensions_export.h     | 42 +++++++++++++++++
 generated/windows/cmark-gfm_export.h          | 42 +++++++++++++++++
 generated/windows/cmark-gfm_version.h         |  7 +++
 nox.py => noxfile.py                          | 14 +++---
 src/cmarkgfm/cmark.cffi.h                     |  2 +-
 src/cmarkgfm/cmark.py                         |  2 +-
 src/cmarkgfm/cmark_module.h                   |  6 +--
 third_party/cmark                             |  2 +-
 16 files changed, 251 insertions(+), 112 deletions(-)
 create mode 100644 appveyor.yml
 create mode 100644 generated/unix/cmark-gfm-extensions_export.h
 create mode 100644 generated/unix/cmark-gfm_export.h
 create mode 100644 generated/unix/cmark-gfm_version.h
 delete mode 100644 generated/unix/cmark_export.h
 delete mode 100644 generated/unix/cmark_version.h
 delete mode 100644 generated/unix/cmarkextensions_export.h
 create mode 100644 generated/windows/cmark-gfm-extensions_export.h
 create mode 100644 generated/windows/cmark-gfm_export.h
 create mode 100644 generated/windows/cmark-gfm_version.h
 rename nox.py => noxfile.py (76%)

diff --git a/.travis.yml b/.travis.yml
index d324595..9409a9d 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -3,19 +3,22 @@ language: python
 matrix:
   include:
     - python: 3.6
-      env: NOX_SESSION="lint"
-    - python: 2.7
-      env: NOX_SESSION="unit(py='2.7')"
+      env: NOXSESSION="lint"
     - python: 3.4
-      env: NOX_SESSION="unit(py='3.4')"
+      env: NOXSESSION="unit-3.4"
     - python: 3.5
-      env: NOX_SESSION="unit(py='3.5')"
+      env: NOXSESSION="unit-3.5"
     - python: 3.6
-      env: NOX_SESSION="unit(py='3.6')"
+      env: NOXSESSION="unit-3.6"
+    - python: 2.7
+      env: NOXSESSION="unit-2.7"
 
-install: pip install nox-automation
+install:
+# Always install nox into Python 3, regardless of the Python version used.
+- virtualenv -p python3 noxenv
+- noxenv/bin/pip install nox
 
-script: nox -s "$NOX_SESSION"
+script: noxenv/bin/nox
 
 notifications:
   email: false
diff --git a/appveyor.yml b/appveyor.yml
new file mode 100644
index 0000000..b5ff4eb
--- /dev/null
+++ b/appveyor.yml
@@ -0,0 +1,46 @@
+environment:
+  matrix:
+    # Pre-installed Python versions, which Appveyor may upgrade to
+    # a later point release.
+    # See: http://www.appveyor.com/docs/installed-software#python
+
+    # We test on 32-bit Python 2.7, and 64-bit Python 3.x.
+    # This is because it takes too long to serially go through six to eight
+    # iterations.
+
+    - PYTHON: "C:\\Python35-x64"
+      NOXSESSION: "unit-3.5"
+    - PYTHON: "C:\\Python27"
+      NOXSESSION: "unit-2.7-32"
+
+matrix:
+    fast_finish: true
+
+install:
+  # Fetch submodules
+  - git submodule update --init --recursive
+  # Prepend newly installed Python to the PATH of this build (this cannot be
+  # done from inside the powershell script as it would require to restart
+  # the parent CMD process).
+  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
+  - python -m pip install -U pip
+
+  # Fix MSVC builds for 64-bit Python. See:
+  # http://stackoverflow.com/questions/32091593/cannot-install-windows-sdk-7-1-on-windows-10
+  - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"
+
+  # Check that we have the expected version and architecture for Python
+  - python --version
+  - python -c "import struct; print(struct.calcsize('P') * 8)"
+
+  # Install the mingw compiler, but only if we're on Python 2.7 or 3.4
+  - pip install --no-cache-dir --pre --index https://pypi.anaconda.org/carlkl/simple "mingwpy; python_version < '3.5'"
+
+  # Install Nox
+  - C:\\Python36-x64\Scripts\pip install nox
+
+build: off
+
+test_script:
+  # Run the project tests
+  - C:\\Python36-x64\Scripts\nox
diff --git a/generated/unix/cmark-gfm-extensions_export.h b/generated/unix/cmark-gfm-extensions_export.h
new file mode 100644
index 0000000..69c0bd7
--- /dev/null
+++ b/generated/unix/cmark-gfm-extensions_export.h
@@ -0,0 +1,42 @@
+
+#ifndef CMARK_GFM_EXTENSIONS_EXPORT_H
+#define CMARK_GFM_EXTENSIONS_EXPORT_H
+
+#ifdef CMARK_GFM_EXTENSIONS_STATIC_DEFINE
+#  define CMARK_GFM_EXTENSIONS_EXPORT
+#  define CMARK_GFM_EXTENSIONS_NO_EXPORT
+#else
+#  ifndef CMARK_GFM_EXTENSIONS_EXPORT
+#    ifdef libcmark_gfm_extensions_EXPORTS
+        /* We are building this library */
+#      define CMARK_GFM_EXTENSIONS_EXPORT __attribute__((visibility("default")))
+#    else
+        /* We are using this library */
+#      define CMARK_GFM_EXTENSIONS_EXPORT __attribute__((visibility("default")))
+#    endif
+#  endif
+
+#  ifndef CMARK_GFM_EXTENSIONS_NO_EXPORT
+#    define CMARK_GFM_EXTENSIONS_NO_EXPORT __attribute__((visibility("hidden")))
+#  endif
+#endif
+
+#ifndef CMARK_GFM_EXTENSIONS_DEPRECATED
+#  define CMARK_GFM_EXTENSIONS_DEPRECATED __attribute__ ((__deprecated__))
+#endif
+
+#ifndef CMARK_GFM_EXTENSIONS_DEPRECATED_EXPORT
+#  define CMARK_GFM_EXTENSIONS_DEPRECATED_EXPORT CMARK_GFM_EXTENSIONS_EXPORT CMARK_GFM_EXTENSIONS_DEPRECATED
+#endif
+
+#ifndef CMARK_GFM_EXTENSIONS_DEPRECATED_NO_EXPORT
+#  define CMARK_GFM_EXTENSIONS_DEPRECATED_NO_EXPORT CMARK_GFM_EXTENSIONS_NO_EXPORT CMARK_GFM_EXTENSIONS_DEPRECATED
+#endif
+
+#if 0 /* DEFINE_NO_DEPRECATED */
+#  ifndef CMARK_GFM_EXTENSIONS_NO_DEPRECATED
+#    define CMARK_GFM_EXTENSIONS_NO_DEPRECATED
+#  endif
+#endif
+
+#endif /* CMARK_GFM_EXTENSIONS_EXPORT_H */
diff --git a/generated/unix/cmark-gfm_export.h b/generated/unix/cmark-gfm_export.h
new file mode 100644
index 0000000..699d737
--- /dev/null
+++ b/generated/unix/cmark-gfm_export.h
@@ -0,0 +1,42 @@
+
+#ifndef CMARK_GFM_EXPORT_H
+#define CMARK_GFM_EXPORT_H
+
+#ifdef CMARK_GFM_STATIC_DEFINE
+#  define CMARK_GFM_EXPORT
+#  define CMARK_GFM_NO_EXPORT
+#else
+#  ifndef CMARK_GFM_EXPORT
+#    ifdef libcmark_gfm_EXPORTS
+        /* We are building this library */
+#      define CMARK_GFM_EXPORT __attribute__((visibility("default")))
+#    else
+        /* We are using this library */
+#      define CMARK_GFM_EXPORT __attribute__((visibility("default")))
+#    endif
+#  endif
+
+#  ifndef CMARK_GFM_NO_EXPORT
+#    define CMARK_GFM_NO_EXPORT __attribute__((visibility("hidden")))
+#  endif
+#endif
+
+#ifndef CMARK_GFM_DEPRECATED
+#  define CMARK_GFM_DEPRECATED __attribute__ ((__deprecated__))
+#endif
+
+#ifndef CMARK_GFM_DEPRECATED_EXPORT
+#  define CMARK_GFM_DEPRECATED_EXPORT CMARK_GFM_EXPORT CMARK_GFM_DEPRECATED
+#endif
+
+#ifndef CMARK_GFM_DEPRECATED_NO_EXPORT
+#  define CMARK_GFM_DEPRECATED_NO_EXPORT CMARK_GFM_NO_EXPORT CMARK_GFM_DEPRECATED
+#endif
+
+#if 0 /* DEFINE_NO_DEPRECATED */
+#  ifndef CMARK_GFM_NO_DEPRECATED
+#    define CMARK_GFM_NO_DEPRECATED
+#  endif
+#endif
+
+#endif /* CMARK_GFM_EXPORT_H */
diff --git a/generated/unix/cmark-gfm_version.h b/generated/unix/cmark-gfm_version.h
new file mode 100644
index 0000000..f98bf7a
--- /dev/null
+++ b/generated/unix/cmark-gfm_version.h
@@ -0,0 +1,7 @@
+#ifndef CMARK_GFM_VERSION_H
+#define CMARK_GFM_VERSION_H
+
+#define CMARK_GFM_VERSION ((0 << 24) | (28 << 16) | (3 << 8) | 17)
+#define CMARK_GFM_VERSION_STRING "0.28.3.gfm.17"
+
+#endif
diff --git a/generated/unix/cmark_export.h b/generated/unix/cmark_export.h
deleted file mode 100644
index c00eca2..0000000
--- a/generated/unix/cmark_export.h
+++ /dev/null
@@ -1,41 +0,0 @@
-
-#ifndef CMARK_EXPORT_H
-#define CMARK_EXPORT_H
-
-#ifdef CMARK_STATIC_DEFINE
-#  define CMARK_EXPORT
-#  define CMARK_NO_EXPORT
-#else
-#  ifndef CMARK_EXPORT
-#    ifdef libcmark_gfm_EXPORTS
-        /* We are building this library */
-#      define CMARK_EXPORT __attribute__((visibility("default")))
-#    else
-        /* We are using this library */
-#      define CMARK_EXPORT __attribute__((visibility("default")))
-#    endif
-#  endif
-
-#  ifndef CMARK_NO_EXPORT
-#    define CMARK_NO_EXPORT __attribute__((visibility("hidden")))
-#  endif
-#endif
-
-#ifndef CMARK_DEPRECATED
-#  define CMARK_DEPRECATED __attribute__ ((__deprecated__))
-#endif
-
-#ifndef CMARK_DEPRECATED_EXPORT
-#  define CMARK_DEPRECATED_EXPORT CMARK_EXPORT CMARK_DEPRECATED
-#endif
-
-#ifndef CMARK_DEPRECATED_NO_EXPORT
-#  define CMARK_DEPRECATED_NO_EXPORT CMARK_NO_EXPORT CMARK_DEPRECATED
-#endif
-
-#define DEFINE_NO_DEPRECATED 0
-#if DEFINE_NO_DEPRECATED
-# define CMARK_NO_DEPRECATED
-#endif
-
-#endif
diff --git a/generated/unix/cmark_version.h b/generated/unix/cmark_version.h
deleted file mode 100644
index 9511e38..0000000
--- a/generated/unix/cmark_version.h
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef CMARK_VERSION_H
-#define CMARK_VERSION_H
-
-#define CMARK_VERSION ((0 << 24) | (28 << 16) | (3 << 8) | 12)
-#define CMARK_VERSION_STRING "0.28.3.gfm.12"
-#define CMARK_GFM_VERSION 12
-
-#endif
diff --git a/generated/unix/cmarkextensions_export.h b/generated/unix/cmarkextensions_export.h
deleted file mode 100644
index b1a7b7c..0000000
--- a/generated/unix/cmarkextensions_export.h
+++ /dev/null
@@ -1,41 +0,0 @@
-
-#ifndef CMARKEXTENSIONS_EXPORT_H
-#define CMARKEXTENSIONS_EXPORT_H
-
-#ifdef CMARKEXTENSIONS_STATIC_DEFINE
-#  define CMARKEXTENSIONS_EXPORT
-#  define CMARKEXTENSIONS_NO_EXPORT
-#else
-#  ifndef CMARKEXTENSIONS_EXPORT
-#    ifdef libcmark_gfmextensions_EXPORTS
-        /* We are building this library */
-#      define CMARKEXTENSIONS_EXPORT __attribute__((visibility("default")))
-#    else
-        /* We are using this library */
-#      define CMARKEXTENSIONS_EXPORT __attribute__((visibility("default")))
-#    endif
-#  endif
-
-#  ifndef CMARKEXTENSIONS_NO_EXPORT
-#    define CMARKEXTENSIONS_NO_EXPORT __attribute__((visibility("hidden")))
-#  endif
-#endif
-
-#ifndef CMARKEXTENSIONS_DEPRECATED
-#  define CMARKEXTENSIONS_DEPRECATED __attribute__ ((__deprecated__))
-#endif
-
-#ifndef CMARKEXTENSIONS_DEPRECATED_EXPORT
-#  define CMARKEXTENSIONS_DEPRECATED_EXPORT CMARKEXTENSIONS_EXPORT CMARKEXTENSIONS_DEPRECATED
-#endif
-
-#ifndef CMARKEXTENSIONS_DEPRECATED_NO_EXPORT
-#  define CMARKEXTENSIONS_DEPRECATED_NO_EXPORT CMARKEXTENSIONS_NO_EXPORT CMARKEXTENSIONS_DEPRECATED
-#endif
-
-#define DEFINE_NO_DEPRECATED 0
-#if DEFINE_NO_DEPRECATED
-# define CMARKEXTENSIONS_NO_DEPRECATED
-#endif
-
-#endif
diff --git a/generated/windows/cmark-gfm-extensions_export.h b/generated/windows/cmark-gfm-extensions_export.h
new file mode 100644
index 0000000..3cf35e8
--- /dev/null
+++ b/generated/windows/cmark-gfm-extensions_export.h
@@ -0,0 +1,42 @@
+
+#ifndef CMARK_GFM_EXTENSIONS_EXPORT_H
+#define CMARK_GFM_EXTENSIONS_EXPORT_H
+
+#ifdef CMARK_GFM_EXTENSIONS_STATIC_DEFINE
+#  define CMARK_GFM_EXTENSIONS_EXPORT
+#  define CMARK_GFM_EXTENSIONS_NO_EXPORT
+#else
+#  ifndef CMARK_GFM_EXTENSIONS_EXPORT
+#    ifdef libcmark_gfm_extensions_EXPORTS
+        /* We are building this library */
+#      define CMARK_GFM_EXTENSIONS_EXPORT __declspec(dllexport)
+#    else
+        /* We are using this library */
+#      define CMARK_GFM_EXTENSIONS_EXPORT __declspec(dllimport)
+#    endif
+#  endif
+
+#  ifndef CMARK_GFM_EXTENSIONS_NO_EXPORT
+#    define CMARK_GFM_EXTENSIONS_NO_EXPORT 
+#  endif
+#endif
+
+#ifndef CMARK_GFM_EXTENSIONS_DEPRECATED
+#  define CMARK_GFM_EXTENSIONS_DEPRECATED __declspec(deprecated)
+#endif
+
+#ifndef CMARK_GFM_EXTENSIONS_DEPRECATED_EXPORT
+#  define CMARK_GFM_EXTENSIONS_DEPRECATED_EXPORT CMARK_GFM_EXTENSIONS_EXPORT CMARK_GFM_EXTENSIONS_DEPRECATED
+#endif
+
+#ifndef CMARK_GFM_EXTENSIONS_DEPRECATED_NO_EXPORT
+#  define CMARK_GFM_EXTENSIONS_DEPRECATED_NO_EXPORT CMARK_GFM_EXTENSIONS_NO_EXPORT CMARK_GFM_EXTENSIONS_DEPRECATED
+#endif
+
+#if 0 /* DEFINE_NO_DEPRECATED */
+#  ifndef CMARK_GFM_EXTENSIONS_NO_DEPRECATED
+#    define CMARK_GFM_EXTENSIONS_NO_DEPRECATED
+#  endif
+#endif
+
+#endif /* CMARK_GFM_EXTENSIONS_EXPORT_H */
diff --git a/generated/windows/cmark-gfm_export.h b/generated/windows/cmark-gfm_export.h
new file mode 100644
index 0000000..c29a795
--- /dev/null
+++ b/generated/windows/cmark-gfm_export.h
@@ -0,0 +1,42 @@
+
+#ifndef CMARK_GFM_EXPORT_H
+#define CMARK_GFM_EXPORT_H
+
+#ifdef CMARK_GFM_STATIC_DEFINE
+#  define CMARK_GFM_EXPORT
+#  define CMARK_GFM_NO_EXPORT
+#else
+#  ifndef CMARK_GFM_EXPORT
+#    ifdef libcmark_gfm_EXPORTS
+        /* We are building this library */
+#      define CMARK_GFM_EXPORT __declspec(dllexport)
+#    else
+        /* We are using this library */
+#      define CMARK_GFM_EXPORT __declspec(dllimport)
+#    endif
+#  endif
+
+#  ifndef CMARK_GFM_NO_EXPORT
+#    define CMARK_GFM_NO_EXPORT 
+#  endif
+#endif
+
+#ifndef CMARK_GFM_DEPRECATED
+#  define CMARK_GFM_DEPRECATED __declspec(deprecated)
+#endif
+
+#ifndef CMARK_GFM_DEPRECATED_EXPORT
+#  define CMARK_GFM_DEPRECATED_EXPORT CMARK_GFM_EXPORT CMARK_GFM_DEPRECATED
+#endif
+
+#ifndef CMARK_GFM_DEPRECATED_NO_EXPORT
+#  define CMARK_GFM_DEPRECATED_NO_EXPORT CMARK_GFM_NO_EXPORT CMARK_GFM_DEPRECATED
+#endif
+
+#if 0 /* DEFINE_NO_DEPRECATED */
+#  ifndef CMARK_GFM_NO_DEPRECATED
+#    define CMARK_GFM_NO_DEPRECATED
+#  endif
+#endif
+
+#endif /* CMARK_GFM_EXPORT_H */
diff --git a/generated/windows/cmark-gfm_version.h b/generated/windows/cmark-gfm_version.h
new file mode 100644
index 0000000..c71a673
--- /dev/null
+++ b/generated/windows/cmark-gfm_version.h
@@ -0,0 +1,7 @@
+#ifndef CMARK_GFM_VERSION_H
+#define CMARK_GFM_VERSION_H
+
+#define CMARK_GFM_VERSION ((0 << 24) | (28 << 16) | (3 << 8) | 17)
+#define CMARK_GFM_VERSION_STRING "0.28.3.gfm.17"
+
+#endif
diff --git a/nox.py b/noxfile.py
similarity index 76%
rename from nox.py
rename to noxfile.py
index 4d27d71..36687f8 100644
--- a/nox.py
+++ b/noxfile.py
@@ -5,9 +5,8 @@
 import nox
 
 
-@nox.session
-@nox.parametrize('py', ['2.7', '3.4', '3.5', '3.6'])
-def unit(session, py):
+@nox.session(py=['2.7', '2.7-32', '3.4', '3.5', '3.6'])
+def unit(session):
     session.install('pytest', 'pytest-cov')
     session.install('.')
     session.run(
@@ -30,7 +29,7 @@ def lint(session):
     session.run('python', 'setup.py', 'check', '-m', '-r', '-s')
 
 
-@nox.session
+@nox.session(py=False)
 def regenerate(session):
     """Regenerates header files for cmark under ./generated."""
     if platform.system() == 'Windows':
@@ -38,14 +37,13 @@ def regenerate(session):
     else:
         output_dir = '../generated/unix'
 
-    session.virtualenv = False
     session.run(shutil.rmtree, 'build', ignore_errors=True)
     session.run(os.makedirs, 'build')
     session.chdir('build')
     session.run('cmake', '../third_party/cmark')
-    session.run(shutil.copy, 'src/cmark_export.h', output_dir)
-    session.run(shutil.copy, 'src/cmark_version.h', output_dir)
+    session.run(shutil.copy, 'src/cmark-gfm_export.h', output_dir)
+    session.run(shutil.copy, 'src/cmark-gfm_version.h', output_dir)
     session.run(shutil.copy, 'src/config.h', output_dir)
-    session.run(shutil.copy, 'extensions/cmarkextensions_export.h', output_dir)
+    session.run(shutil.copy, 'extensions/cmark-gfm-extensions_export.h', output_dir)
     session.chdir('..')
     session.run(shutil.rmtree, 'build')
diff --git a/src/cmarkgfm/cmark.cffi.h b/src/cmarkgfm/cmark.cffi.h
index 1eea075..c073824 100644
--- a/src/cmarkgfm/cmark.cffi.h
+++ b/src/cmarkgfm/cmark.cffi.h
@@ -64,4 +64,4 @@ cmark_llist *cmark_parser_get_syntax_extensions(cmark_parser *parser);
 
 // /* From core-extensions.h */
 
-void core_extensions_ensure_registered(void);
\ No newline at end of file
+void cmark_gfm_core_extensions_ensure_registered(void);
\ No newline at end of file
diff --git a/src/cmarkgfm/cmark.py b/src/cmarkgfm/cmark.py
index d7ce8f2..76e3b1b 100644
--- a/src/cmarkgfm/cmark.py
+++ b/src/cmarkgfm/cmark.py
@@ -168,7 +168,7 @@ def render_html(root, options=0, extensions=None):
 
 def core_extensions_ensure_registered():
     """Direct wrapper over core_extensions_ensure_registered."""
-    _cmark.lib.core_extensions_ensure_registered()
+    _cmark.lib.cmark_gfm_core_extensions_ensure_registered()
 
 
 def find_syntax_extension(name):
diff --git a/src/cmarkgfm/cmark_module.h b/src/cmarkgfm/cmark_module.h
index 10d3c8f..6b4dae6 100644
--- a/src/cmarkgfm/cmark_module.h
+++ b/src/cmarkgfm/cmark_module.h
@@ -7,9 +7,9 @@ extern "C" {
 
 #define CMARKEXTENSIONS_STATIC_DEFINE
 
-#include "cmark.h"
-#include "cmark_extension_api.h"
-#include "core-extensions.h"
+#include "cmark-gfm.h"
+#include "cmark-gfm-extension_api.h"
+#include "cmark-gfm-core-extensions.h"
 
 #ifdef __cplusplus
 }
