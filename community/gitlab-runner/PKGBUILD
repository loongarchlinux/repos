# Maintainer: Sven-Hendrik Haase <svenstaro@archlinux.org>
# Contributor: Lubomir 'Kuci' Kucera <kuci24-at-gmail-dot-com>

pkgname=gitlab-runner
pkgver=14.5.2
_commit=e91107dd
pkgrel=1
pkgdesc="The official GitLab CI runner written in Go"
arch=('loongarch64' 'x86_64')
url='https://gitlab.com/gitlab-org/gitlab-runner'
license=('GPL3')
depends=('ca-certificates' 'curl' 'git' 'glibc' 'tar')
makedepends=('git' 'go' 'git' 'mercurial' 'gox')
install=gitlab-runner.install
replaces=('gitlab-ci-multi-runner')
backup=('etc/gitlab-runner/config.toml')
noextract=("prebuilt-alpine-arm-${pkgver}.tar.xz"
           "prebuilt-alpine-arm64-${pkgver}.tar.xz"
           "prebuilt-alpine-s390x-${pkgver}.tar.xz"
           "prebuilt-alpine-x86_64-pwsh-${pkgver}.tar.xz"
           "prebuilt-alpine-x86_64-${pkgver}.tar.xz"
           "prebuilt-ubuntu-arm-${pkgver}.tar.xz"
           "prebuilt-ubuntu-arm64-${pkgver}.tar.xz"
           "prebuilt-ubuntu-s390x-${pkgver}.tar.xz"
           "prebuilt-ubuntu-x86_64-pwsh-${pkgver}.tar.xz"
           "prebuilt-ubuntu-x86_64-${pkgver}.tar.xz")
source=("git+https://gitlab.com/gitlab-org/gitlab-runner.git#tag=${_commit}"
        "prebuilt-alpine-arm-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-arm.tar.xz"
        "prebuilt-alpine-arm64-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-arm64.tar.xz"
        "prebuilt-alpine-s390x-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-s390x.tar.xz"
        "prebuilt-alpine-x86_64-pwsh-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-x86_64-pwsh.tar.xz"
        "prebuilt-alpine-x86_64-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-alpine-x86_64.tar.xz"
        "prebuilt-ubuntu-arm-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-arm.tar.xz"
        "prebuilt-ubuntu-arm64-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-arm64.tar.xz"
        "prebuilt-ubuntu-s390x-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-s390x.tar.xz"
        "prebuilt-ubuntu-x86_64-pwsh-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-x86_64-pwsh.tar.xz"
        "prebuilt-ubuntu-x86_64-${pkgver}.tar.xz::https://gitlab-runner-downloads.s3.amazonaws.com/v${pkgver}/helper-images/prebuilt-ubuntu-x86_64.tar.xz"
        "gitlab-runner.service"
        "gitlab-runner.sysusers"
        "gitlab-runner.tmpfiles"
        "remove-syscall-test.patch"
        "config.toml")
sha512sums=('SKIP'
            'd0db92ca78ff45a58e06b8c3d3b43dd1897b0358b7b77ec9f0e5e9d7884cb8205a90ee9336af5a4ff1ba227379d1dee00d803aa6118e6e6b73a0d9accd37f57b'
            'ff8708b5d90021431695e32b0e425d240ca2235f19d4ea87fd0cd3073b31b8aa0ef0ff89765e9d99caef3da12a4faf87d95d08413bc606bba6681dc4f570c10b'
            '7a2f65490abca21e63f3db5020526b0b4f414dd4707953ec6d9d8afc6aed70c1ff180821fe6dc7a3b8b00165cfa578cd11f12db2828ecc03eb97a0ec18e50625'
            'c5ebceec56a273bcceb50cf433e2b6eaef4c6f1900812b05c4757b642b7aff92b41fb4ba87cd3d824c01bdc242c95d24cedb2cbf25565381633a64b8516a3360'
            '145d41163adedf861a899c250d42cc7ded182f8659fe8a6164a979c307381007e3663f005f2d720a55de5f39b9138b35805405c478bb88b47beb6928cb6c2f15'
            '44d27d00b0106997a797af1a8eed9de95219bb1f5698e25cb1f55c4bfff63f5aea92eae65a4dfae547dca336ced49cd1ed63b579a78ba247c6aeaf6478f723bc'
            '1ecbd880d4fb116f9d4cebceacbdc5547fe83983574fabf9a738f87a67dfacc52e365c7b46d0f5455f53806b16a698cb8c3a0daf5d28e6a8284bc4164603213a'
            'bfdc216a293e2cc5799c071ecf09b4d168574f913df81f6d3ffd619301f83ca199ff1a5d929b9d10705f8ecf5c92cd0da2f906a11d41f7e73359170991d367af'
            '9c6b8aa436a2306e6c5f0a25fabf719fbdead7e9c102458033ee03ef1457686a7fd1e9af86d3a11299abeb75a252ba2926b81fc59af7fb0b33249bd3333c7ba2'
            'a26c4e45bb2911272629cf4eca4bb0f82767eba4b076de4bffa7225094962c015ed7ec28c66dba14892dae4b4be3df01c22e2f9546a1db3e0495cc2e378c545b'
            'c0af374b9986895aedcfaee6c67cfad68f0f7289f87e4611358adaff59a2f349f55764fe28b2b1f61f8bfeb61126d4f90d433c626fdf9b826a2de6217f86574f'
            '8aa7f08702e99053c696fcc2aaba83beb9e9cd6f31973d82862db9350ac46df3a095377625d31fe909677525290d2de922d7a97930ed235774cb8f0da8944d40'
            '6751d9fa0b27172d1b419c4138f5ac15cbc7c9147653a7258cf1470216142c637210bb60608c7ed0974e0e4057e5ddeae32225df1bb36e7dd1f20fec71e33cc3'
            'dc66f8c841c6b73ab031a5e4b891d6eb25a237647d179d792c73b645de99d7a2619788677e80d487b710eeef039242118b64abec9e32c7ce096f130732bcae43'
            '9718b94bd0ddb09095ffb8c1e60ca1e9649dabb1747e7fc95e58e404b2f9effdeb4cfd759f5b904443dc53a4e18c02003c38f85584713deb49f6a6d1007503de')

prepare() {
  cd gitlab-runner

  local version=$(make version | grep "Current version:" | sed -n "s/.*: \(.*\)/\1/p")
  local revision=$(make version | grep "Current revision:" | sed -n "s/.*: \(.*\)/\1/p")
  local branch=$(make version | grep "Current branch:" | sed -n "s/.*: \(.*\)/\1/p")

  # Upstream patches their own go here apparently and then they check for
  # whether it was patched. It's kinda weird and the whole thing isn't really
  # necessary at all if you let go upstream handle it:
  # https://github.com/golang/go/commit/a76511f3a40ea69ee4f5cd86e735e1c8a84f0aa2
  # Thankfully in Arch, we have a recent go (at least 1.17.5).
  patch -Np1 -i "$srcdir"/remove-syscall-test.patch

  sed -i "s/var VERSION.*/var VERSION = \"$version\"/" common/version.go
  sed -i "s/var REVISION.*/var REVISION = \"$revision\"/" common/version.go
  sed -i "s/var BRANCH.*/var BRANCH = \"$branch\"/" common/version.go
}

build() {
  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export CGO_LDFLAGS="${LDFLAGS}"
  export GOFLAGS="-buildmode=pie -trimpath -ldflags=-linkmode=external -mod=readonly -modcacherw"

  cd gitlab-runner
  go build -o gitlab-runner .
}

package() {
  cd gitlab-runner

  install -Dm644 "${srcdir}/config.toml" "${pkgdir}/etc/gitlab-runner/config.toml"
  install -Dm644 "${srcdir}/gitlab-runner.service" "${pkgdir}/usr/lib/systemd/system/gitlab-runner.service"
  install -Dm644 "${srcdir}/gitlab-runner.sysusers" "${pkgdir}/usr/lib/sysusers.d/gitlab-runner.conf"
  install -Dm644 "${srcdir}/gitlab-runner.tmpfiles" "${pkgdir}/usr/lib/tmpfiles.d/gitlab-runner.conf"
  install -Dm755 gitlab-runner "${pkgdir}/usr/bin/gitlab-runner"

  # Move prebuilt Docker images to hard-coded canonical location
  for image in prebuilt-{alpine,ubuntu}-{arm,arm64,s390x,x86_64-pwsh,x86_64}-${pkgver}.tar.xz; do
    install -Dm644 "${srcdir}/${image}" "${pkgdir}/usr/lib/gitlab-runner/helper-images/${image}"
  done
}
