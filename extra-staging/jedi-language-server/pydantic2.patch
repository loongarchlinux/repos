diff --git a/jedi_language_server/initialization_options.py b/jedi_language_server/initialization_options.py
index a762f66..66b00b8 100644
--- a/jedi_language_server/initialization_options.py
+++ b/jedi_language_server/initialization_options.py
@@ -7,7 +7,7 @@ initialization options.
 from typing import List, Optional, Pattern, Set
 
 from lsprotocol.types import MarkupKind
-from pydantic import BaseModel, Field
+from pydantic import ConfigDict, BaseModel, Field
 
 # pylint: disable=missing-class-docstring
 # pylint: disable=too-few-public-methods
@@ -22,8 +22,7 @@ def snake_to_camel(string: str) -> str:
 
 
 class Model(BaseModel):
-    class Config:
-        alias_generator = snake_to_camel
+    model_config = ConfigDict(alias_generator=snake_to_camel)
 
 
 class CodeAction(Model):
@@ -115,5 +114,5 @@ class InitializationOptions(Model):
     diagnostics: Diagnostics = Diagnostics()
     hover: Hover = Hover()
     jedi_settings: JediSettings = JediSettings()
-    markup_kind_preferred: Optional[MarkupKind]
+    markup_kind_preferred: Optional[MarkupKind] = None
     workspace: Workspace = Workspace()
diff --git a/pyproject.toml b/pyproject.toml
index 936ec0f..1d77647 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -43,7 +43,7 @@ license = "MIT"
 python = "^3.7,<3.12"
 jedi = "^0.18.1"
 pygls = "^1.0.0"
-pydantic = "^1.9.1"
+pydantic = ">=2.0,<3.0"
 docstring-to-markdown = "0.*"
 importlib-metadata = { version = "^3.10.1", python = "~3.7" }
 lsprotocol = ">=2022.0.0a9"
diff --git a/tests/lsp_tests/test_init_options.py b/tests/lsp_tests/test_init_options.py
index 3ed7a28..2871637 100644
--- a/tests/lsp_tests/test_init_options.py
+++ b/tests/lsp_tests/test_init_options.py
@@ -42,11 +42,11 @@ def test_invalid_initialization_options() -> None:
         expected = [
             {
                 "type": 1,
-                "message": "Invalid InitializationOptions, using defaults: 1 validation error for InitializationOptions\ndiagnostics\n  value is not a valid dict (type=type_error.dict)",
+                "message": "Invalid InitializationOptions, using defaults: 1 validation error for InitializationOptions\ndiagnostics\n  Input should be a valid dictionary or instance of Diagnostics [type=model_type, input_value=1, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.0.3/v/model_type",
             },
             {
                 "type": 1,
-                "message": "Invalid InitializationOptions, using defaults: 1 validation error for InitializationOptions\ndiagnostics\n  value is not a valid dict (type=type_error.dict)",
+                "message": "Invalid InitializationOptions, using defaults: 1 validation error for InitializationOptions\ndiagnostics\n  Input should be a valid dictionary or instance of Diagnostics [type=model_type, input_value=1, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.0.3/v/model_type",
             },
         ]
 
