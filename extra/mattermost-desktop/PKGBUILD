# Maintainer: Caleb Maclennan <caleb@alerque.com>
# Maintainer: Bruno Pagani <archange@archlinux.org>
# Contributor: William Gathoye <william + aur at gathoye dot be>
# Contributor: Aleksandar TrifunoviÄ‡ <akstrfn at gmail dot com>
# Contributor: Jan Was <janek dot jan at gmail dot com>
# Contributor: AUR[Severus]

pkgname=mattermost-desktop
pkgver=5.4.0
pkgrel=3
pkgdesc='Mattermost Desktop application'
arch=(loong64 x86_64)
url="https://github.com/${pkgname/-//}"
license=(Apache)
_electron=electron24
depends=($_electron
         libxcrypt-compat)
makedepends=(gendesk
             git
             jq
             moreutils
             node-gyp
             npm)
_archive="${pkgname#*-}-$pkgver"
source=("$pkgname-$pkgver.tar.gz::$url/archive/v$pkgver.tar.gz"
        "$pkgname.sh")
sha256sums=('3dda3865597182c23ed30ed2791614ff10a0f0660636adc64d6a2e3d83ff7793'
            '1c2bf48b6397d04a5a536c5c9f4960db53249c838c380f03f808c612b00ba4c6')

_npmargs="--cache '$srcdir/npm-cache' --no-audit --no-fund"

prepare() {
	gendesk -q -f -n \
		--pkgname "$pkgname" \
		--pkgdesc "$pkgdesc" \
		--name Mattermost \
		--categories 'Network;InstantMessaging;' \
		--mimetypes 'x-scheme-handler/mattermost;' \
		--custom StartupWMClass="$pkgname"
	cd "$_archive"
	sed -i -e "s/git rev-parse --short HEAD/echo $pkgver/" webpack.config.base.js
	sed -e "s/@ELECTRON@/$_electron/" "../$pkgname.sh" > "$pkgname.sh"
	local _electronVersion="$(< "/usr/lib/$_electron/version")"
	jq '	.linux["target"] = [ "dir" ]' electron-builder.json |
		sponge electron-builder.json
	jq '	.devDependencies["electron"] = $electronVersion |
		del(.devDependencies["electron-rebuild"]) |
		.config.target = $electronVersion |
		.config.runtime = $electronRuntime' \
			--arg electronRuntime "$_electron" \
			--arg electronVersion "$_electronVersion" \
			package.json |
		sponge package.json
	sed -i -e '/package:/s/tar.gz deb rpm/dir/' package.json
	npm $_npmargs install
}

build() {
	cd "$_archive"
	export NODE_ENV=production
	npm $_npmargs --offline run build
	npm $_npmargs --offline run package:linux-all-x64
}

package() {
	cd "$_archive"
	install -Dm0644 -t "$pkgdir/usr/lib/$pkgname/" release/linux-unpacked/resources/app.asar
	cp -a release/linux-unpacked/resources/app.asar.unpacked "$pkgdir/usr/lib/$pkgname/"
	install -Dm0644 -t "$pkgdir/usr/share/licenses/$pkgname/" LICENSE.txt
	install -Dm0644 src/assets/linux/app_icon.png "$pkgdir/usr/share/icons/$pkgname.png"
	install -Dm0755 "$pkgname.sh" "$pkgdir/usr/bin/$pkgname"
	install -Dm0644 -t "$pkgdir/usr/share/applications/" "../$pkgname.desktop"
}
