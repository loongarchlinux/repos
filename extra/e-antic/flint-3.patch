diff --git a/libeantic/configure.ac b/libeantic/configure.ac
index 6ea8614..67fadc1 100644
--- a/libeantic/configure.ac
+++ b/libeantic/configure.ac
@@ -55,20 +55,11 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
 #endif
 ])], [], [AC_MSG_ERROR([libflint version must be at least 2.6.0])])
 
-AC_CHECK_HEADERS(antic/nf.h antic/nf_elem.h, , [AC_MSG_ERROR([antic headers not found])])
-AC_CHECK_LIB(antic, nf_init, [], [AC_MSG_ERROR([libantic not found])])
-
-# Check if we need to provide our own nf_init_randtest which was introduced in https://github.com/wbhart/antic/pull/47
-AC_REPLACE_FUNCS(nf_init_randtest)
-# Unconditionally patch nf_elem_scalar_div_fmpq which has aliasing issues in ANTIC, https://github.com/wbhart/antic/pull/48
-AC_LIBOBJ(EANTIC_nf_elem_scalar_div_fmpq)
-# Unconditionally patch fmpq_poly_add_fmpq which was fixed in https://github.com/wbhart/flint2/commit/17d26d4c957828f3c98c15ddec85108f841d3438
-AC_LIBOBJ(EANTIC_fmpq_poly_add_fmpq)
-# Unconditionally patch nf_elem_add_fmpq so it uses our patched fmpq_poly_add_fmpq
-AC_LIBOBJ(EANTIC_nf_elem_add_fmpq)
-
-AC_CHECK_HEADERS(arb.h arb_poly.h arf.h, , [AC_MSG_ERROR([Arb headers not found. If your arb headers are in a non-standard location, you might need to adapt your CPPFLAGS, e.g., by adding -I/usr/include/arb to the CPPFLAGS environment variable.])])
-AC_SEARCH_LIBS(arb_init, [arb flint-arb],[], [AC_MSG_ERROR([libarb not found])])
+AC_CHECK_HEADERS(flint/nf.h flint/nf_elem.h, , [AC_MSG_ERROR([antic headers not found])])
+AC_CHECK_LIB(flint, nf_init, [], [AC_MSG_ERROR([libantic not found])])
+
+AC_CHECK_HEADERS(flint/arb.h flint/arb_poly.h flint/arf.h, , [AC_MSG_ERROR([Arb headers not found. If your arb headers are in a non-standard location, you might need to adapt your CPPFLAGS, e.g., by adding -I/usr/include/arb to the CPPFLAGS environment variable.])])
+AC_SEARCH_LIBS(arb_init, [flint],[], [AC_MSG_ERROR([libarb not found])])
 
 AC_LANG_PUSH([C++])
 AX_CXX_COMPILE_STDCXX(14)
diff --git a/libeantic/e-antic/fmpq_poly_extra.h b/libeantic/e-antic/fmpq_poly_extra.h
index bda89f8..1770af2 100644
--- a/libeantic/e-antic/fmpq_poly_extra.h
+++ b/libeantic/e-antic/fmpq_poly_extra.h
@@ -16,7 +16,7 @@
 #include "local.h"
 
 #include <flint/fmpq_poly.h>
-#include <arb.h>
+#include <flint/arb.h>
 
 #ifdef __cplusplus
 extern "C" {
diff --git a/libeantic/e-antic/fmpz_poly_extra.h b/libeantic/e-antic/fmpz_poly_extra.h
index fa18055..c375b48 100644
--- a/libeantic/e-antic/fmpz_poly_extra.h
+++ b/libeantic/e-antic/fmpz_poly_extra.h
@@ -17,7 +17,7 @@
 #include "local.h"
 
 #include <flint/fmpz_poly.h>
-#include <arb.h>
+#include <flint/arb.h>
 
 #ifdef __cplusplus
 extern "C" {
diff --git a/libeantic/e-antic/local.h.in b/libeantic/e-antic/local.h.in
index b3915e0..0cb710b 100644
--- a/libeantic/e-antic/local.h.in
+++ b/libeantic/e-antic/local.h.in
@@ -13,6 +13,8 @@
 #ifndef E_ANTIC_LOCAL_H
 #define E_ANTIC_LOCAL_H
 
+#include <stdlib.h>
+
 /* e-antic version number */
 
 #define E_ANTIC_VERSION_MAJOR 1
diff --git a/libeantic/e-antic/renf.h b/libeantic/e-antic/renf.h
index 81d2afe..2f103dc 100644
--- a/libeantic/e-antic/renf.h
+++ b/libeantic/e-antic/renf.h
@@ -21,10 +21,10 @@
 #include "local.h"
 
 #include <flint/fmpq_poly.h>
-#include <antic/nf.h>
-#include <antic/nf_elem.h>
-#include <arb.h>
-#include <arb_poly.h>
+#include <flint/nf.h>
+#include <flint/nf_elem.h>
+#include <flint/arb.h>
+#include <flint/arb_poly.h>
 
 #ifdef __cplusplus
 extern "C" {
diff --git a/libeantic/e-antic/renf_elem.h b/libeantic/e-antic/renf_elem.h
index cc6480f..e0d085a 100644
--- a/libeantic/e-antic/renf_elem.h
+++ b/libeantic/e-antic/renf_elem.h
@@ -18,10 +18,10 @@
 #include "local.h"
 
 #include <flint/fmpq_poly.h>
-#include <arb.h>
-#include <arb_poly.h>
-#include <antic/nf.h>
-#include <antic/nf_elem.h>
+#include <flint/arb.h>
+#include <flint/arb_poly.h>
+#include <flint/nf.h>
+#include <flint/nf_elem.h>
 
 #include "renf.h"
 
@@ -33,12 +33,6 @@ extern "C" {
 #define EANTIC_STR_D   2
 #define EANTIC_STR_ARB 4
 
-// Patch nf_elem_scalar_div & nf_elem_add_fmpq which have issues in the released version of ANTIC, see upstream/patched.
-LIBEANTIC_API void EANTIC_nf_elem_scalar_div_fmpq(nf_elem_t a, const nf_elem_t b, const fmpq_t c, const nf_t nf);
-#define nf_elem_scalar_div_fmpq(a, b, c, nf) EANTIC_nf_elem_scalar_div_fmpq(a, b, c, nf)
-LIBEANTIC_API void EANTIC_nf_elem_add_fmpq(nf_elem_t a, const nf_elem_t b, const fmpq_t c, const nf_t nf);
-#define nf_elem_add_fmpq(a, b, c, nf) EANTIC_nf_elem_add_fmpq(a, b, c, nf)
-
 /// === Memory Layout ===
 /// A real embedded number field element
 typedef struct LIBEANTIC_API renf_elem
diff --git a/libeantic/src/fmpq_poly_extra/check_unique_real_root.c b/libeantic/src/fmpq_poly_extra/check_unique_real_root.c
index e23db4c..4d9aa9d 100644
--- a/libeantic/src/fmpq_poly_extra/check_unique_real_root.c
+++ b/libeantic/src/fmpq_poly_extra/check_unique_real_root.c
@@ -12,6 +12,8 @@
 
 #include "../e-antic/fmpz_poly_extra.h"
 #include "../e-antic/fmpq_poly_extra.h"
+#include <flint/fmpq.h>
+#include <flint/fmpz_vec.h>
 
 static __inline__ int
 arb_sgn2(arb_t a)
diff --git a/libeantic/src/fmpq_poly_extra/set_str_pretty.c b/libeantic/src/fmpq_poly_extra/set_str_pretty.c
index f741e1f..04a3b02 100644
--- a/libeantic/src/fmpq_poly_extra/set_str_pretty.c
+++ b/libeantic/src/fmpq_poly_extra/set_str_pretty.c
@@ -10,6 +10,7 @@
 */
 
 #include "flint/fmpq_poly.h"
+#include <flint/fmpq.h>
 #include "../e-antic/fmpq_poly_extra.h"
 #include <ctype.h>
 #include <string.h>
diff --git a/libeantic/src/fmpz_poly_extra/descartes_bound.c b/libeantic/src/fmpz_poly_extra/descartes_bound.c
index efffb3c..9f7b851 100644
--- a/libeantic/src/fmpz_poly_extra/descartes_bound.c
+++ b/libeantic/src/fmpz_poly_extra/descartes_bound.c
@@ -11,6 +11,7 @@
 */
 
 #include "../e-antic/fmpz_poly_extra.h"
+#include <flint/fmpz_vec.h>
 
 slong fmpz_poly_num_real_roots_upper_bound(fmpz_poly_t pol)
 {
diff --git a/libeantic/src/fmpz_poly_extra/descartes_bound_0_1.c b/libeantic/src/fmpz_poly_extra/descartes_bound_0_1.c
index 2feca9c..0fbac5a 100644
--- a/libeantic/src/fmpz_poly_extra/descartes_bound_0_1.c
+++ b/libeantic/src/fmpz_poly_extra/descartes_bound_0_1.c
@@ -15,6 +15,7 @@
 */
 
 #include "../e-antic/fmpz_poly_extra.h"
+#include <flint/fmpz_vec.h>
 
 slong _fmpz_poly_descartes_bound_0_1(fmpz * p, slong len, slong bound)
 {
diff --git a/libeantic/src/fmpz_poly_extra/evaluate_at_one.c b/libeantic/src/fmpz_poly_extra/evaluate_at_one.c
index b8f66c2..90c250a 100644
--- a/libeantic/src/fmpz_poly_extra/evaluate_at_one.c
+++ b/libeantic/src/fmpz_poly_extra/evaluate_at_one.c
@@ -10,6 +10,7 @@
 */
 
 #include "../e-antic/fmpz_poly_extra.h"
+#include <flint/fmpz_vec.h>
 
 void fmpz_poly_evaluate_at_one(fmpz_t res, fmpz * p, slong len)
 {
diff --git a/libeantic/src/fmpz_poly_extra/isolate_real_roots.c b/libeantic/src/fmpz_poly_extra/isolate_real_roots.c
index 65ebb71..9295427 100644
--- a/libeantic/src/fmpz_poly_extra/isolate_real_roots.c
+++ b/libeantic/src/fmpz_poly_extra/isolate_real_roots.c
@@ -11,6 +11,8 @@
 
 #include <assert.h>
 
+#include <flint/fmpz_vec.h>
+#include <flint/fmpq.h>
 #include "../e-antic/fmpz_poly_extra.h"
 
 /* isolate the real roots of pol contained in [0,1] */
diff --git a/libeantic/src/fmpz_poly_extra/positive_root_upper_bound_2exp.c b/libeantic/src/fmpz_poly_extra/positive_root_upper_bound_2exp.c
index 507a1c3..011461b 100644
--- a/libeantic/src/fmpz_poly_extra/positive_root_upper_bound_2exp.c
+++ b/libeantic/src/fmpz_poly_extra/positive_root_upper_bound_2exp.c
@@ -16,7 +16,7 @@
 
 #include <assert.h>
 
-#include <arb.h>
+#include <flint/arb.h>
 #include <flint/fmpz_poly.h>
 #include "../e-antic/fmpz_poly_extra.h"
 
diff --git a/libeantic/src/fmpz_poly_extra/randtest_irreducible.c b/libeantic/src/fmpz_poly_extra/randtest_irreducible.c
index f1457aa..6c5ddc4 100644
--- a/libeantic/src/fmpz_poly_extra/randtest_irreducible.c
+++ b/libeantic/src/fmpz_poly_extra/randtest_irreducible.c
@@ -10,6 +10,7 @@
 */
 
 #include <flint/fmpz_mod_poly.h>
+#include <flint/fmpz_mod.h>
 
 #include "../e-antic/fmpz_poly_extra.h"
 
diff --git a/libeantic/src/fmpz_poly_extra/set_str_pretty.c b/libeantic/src/fmpz_poly_extra/set_str_pretty.c
index 5ab2615..a4d0099 100644
--- a/libeantic/src/fmpz_poly_extra/set_str_pretty.c
+++ b/libeantic/src/fmpz_poly_extra/set_str_pretty.c
@@ -11,6 +11,7 @@
 
 #include "../e-antic/fmpz_poly_extra.h"
 #include "../e-antic/fmpq_poly_extra.h"
+#include <flint/fmpq.h>
 
 int fmpz_poly_set_str_pretty(fmpz_poly_t p, const char * s, const char * var)
 {
diff --git a/libeantic/src/renf/set_embeddings_fmpz_poly.c b/libeantic/src/renf/set_embeddings_fmpz_poly.c
index 5cbd373..ebff89d 100644
--- a/libeantic/src/renf/set_embeddings_fmpz_poly.c
+++ b/libeantic/src/renf/set_embeddings_fmpz_poly.c
@@ -13,6 +13,7 @@
 
 #include "../e-antic/renf.h"
 #include "../e-antic/fmpz_poly_extra.h"
+#include <flint/fmpz_vec.h>
 
 slong renf_set_embeddings_fmpz_poly(renf * nf, fmpz_poly_t pol, slong lim, slong prec)
 {
diff --git a/libeantic/src/renf_elem/fdiv.c b/libeantic/src/renf_elem/fdiv.c
index 5b61aa8..12fd355 100644
--- a/libeantic/src/renf_elem/fdiv.c
+++ b/libeantic/src/renf_elem/fdiv.c
@@ -9,7 +9,7 @@
     (at your option) any later version.  See <http://www.gnu.org/licenses/>.
 */
 
-#include <arb.h>
+#include <flint/arb.h>
 
 #include "../e-antic/renf_elem.h"
 
diff --git a/libeantic/src/renf_elem/get_str_pretty.c b/libeantic/src/renf_elem/get_str_pretty.c
index b46e2cc..481fe4d 100644
--- a/libeantic/src/renf_elem/get_str_pretty.c
+++ b/libeantic/src/renf_elem/get_str_pretty.c
@@ -9,7 +9,8 @@
     (at your option) any later version.  See <http://www.gnu.org/licenses/>.
 */
 
-#include <arb.h>
+#include <flint/arb.h>
+#include <math.h>
 #include <string.h>
 
 #include "../e-antic/renf_elem.h"
diff --git a/libeantic/srcxx/Makefile.am b/libeantic/srcxx/Makefile.am
index 87cbe33..ccac7b8 100644
--- a/libeantic/srcxx/Makefile.am
+++ b/libeantic/srcxx/Makefile.am
@@ -15,7 +15,7 @@ EXTRA_DIST = $(srcdir)/libeanticxx.map
 AM_CPPFLAGS = -DBUILD_LIBEANTIC
 
 # Linked-against libraries
-libeanticxx_la_LIBADD = ../src/libeantic.la -lgmpxx -lflint -lantic
+libeanticxx_la_LIBADD = ../src/libeantic.la -lgmpxx -lflint
 
 # Installed headers
 nobase_pkginclude_HEADERS =        \
diff --git a/libeantic/srcxx/renf_elem_class.cpp b/libeantic/srcxx/renf_elem_class.cpp
index 84e510a..c8ed612 100644
--- a/libeantic/srcxx/renf_elem_class.cpp
+++ b/libeantic/srcxx/renf_elem_class.cpp
@@ -511,8 +511,12 @@ renf_elem_class::renf_elem_class(const renf_class& k, const std::vector<mpz_clas
 
     fmpq_poly_t p;
     fmpq_poly_init(p);
-    for (size_t i = 0; i < coefficients.size(); i++)
-        fmpq_poly_set_coeff_mpz(p, static_cast<slong>(i), coefficients[i].__get_mp());
+    fmpz_t tmpfz;
+    for (size_t i = 0; i < coefficients.size(); i++) {
+        fmpz_init_set_readonly(tmpfz, coefficients[i].__get_mp());
+        fmpq_poly_set_coeff_fmpz(p, static_cast<slong>(i), tmpfz);
+        fmpz_clear_readonly(tmpfz);
+    }
 
     renf_elem_set_fmpq_poly(a, p, nf->renf_t());
     fmpq_poly_clear(p);
@@ -526,7 +530,12 @@ renf_elem_class::renf_elem_class(const renf_class& k, const std::vector<mpq_clas
 
     fmpq_poly_t p;
     fmpq_poly_init(p);
-    fmpq_poly_set_array_mpq(p, reinterpret_cast<const mpq_t*>(&coefficients[0]), coefficients.size());
+    fmpq_t tmpfq;
+    for (size_t i = 0; i < coefficients.size(); i++) {
+        fmpq_init_set_readonly(tmpfq, coefficients[i].__get_mp());
+        fmpq_poly_set_coeff_fmpq(p, static_cast<slong>(i), tmpfq);
+        fmpq_clear_readonly(tmpfq);
+    }
 
     renf_elem_set_fmpq_poly(a, p, nf->renf_t());
     fmpq_poly_clear(p);
diff --git a/libeantic/test/fmpq_poly_extra/t-evaluate.c b/libeantic/test/fmpq_poly_extra/t-evaluate.c
index 9bf017a..a5d2c7a 100644
--- a/libeantic/test/fmpq_poly_extra/t-evaluate.c
+++ b/libeantic/test/fmpq_poly_extra/t-evaluate.c
@@ -10,6 +10,7 @@
 */
 
 #include "../../e-antic/fmpq_poly_extra.h"
+#include <flint/fmpq.h>
 
 int main(void)
 {
diff --git a/libeantic/test/fmpq_poly_extra/t-set_str_pretty.c b/libeantic/test/fmpq_poly_extra/t-set_str_pretty.c
index f5e35da..50a6604 100644
--- a/libeantic/test/fmpq_poly_extra/t-set_str_pretty.c
+++ b/libeantic/test/fmpq_poly_extra/t-set_str_pretty.c
@@ -10,6 +10,7 @@
 */
 
 #include <stdio.h>
+#include <stdlib.h>
 #include <string.h>
 
 #include "../../e-antic/fmpq_poly_extra.h"
diff --git a/libeantic/test/fmpz_poly_extra/t-has_real_root.c b/libeantic/test/fmpz_poly_extra/t-has_real_root.c
index 9c4edef..546db9f 100644
--- a/libeantic/test/fmpz_poly_extra/t-has_real_root.c
+++ b/libeantic/test/fmpz_poly_extra/t-has_real_root.c
@@ -10,6 +10,7 @@
 */
 
 #include "../../e-antic/fmpz_poly_extra.h"
+#include <stdlib.h>
 
 int main(void)
 {
diff --git a/libeantic/test/fmpz_poly_extra/t-isolate_real_roots.c b/libeantic/test/fmpz_poly_extra/t-isolate_real_roots.c
index 0ff2b45..1fad0ea 100644
--- a/libeantic/test/fmpz_poly_extra/t-isolate_real_roots.c
+++ b/libeantic/test/fmpz_poly_extra/t-isolate_real_roots.c
@@ -12,6 +12,8 @@
 #include <stdio.h>
 #include <flint/fmpq_vec.h>
 #include <flint/fmpq_poly.h>
+#include <flint/fmpq.h>
+#include <flint/fmpz_vec.h>
 
 #include "../../e-antic/fmpz_poly_extra.h"
 
diff --git a/libeantic/test/fmpz_poly_extra/t-positive_root_upper_bound_2exp.c b/libeantic/test/fmpz_poly_extra/t-positive_root_upper_bound_2exp.c
index 0b365fc..79f2462 100644
--- a/libeantic/test/fmpz_poly_extra/t-positive_root_upper_bound_2exp.c
+++ b/libeantic/test/fmpz_poly_extra/t-positive_root_upper_bound_2exp.c
@@ -10,6 +10,7 @@
 */
 
 #include "../../e-antic/fmpz_poly_extra.h"
+#include <flint/fmpq.h>
 
 int main(void)
 {
diff --git a/libeantic/test/fmpz_poly_extra/t-scale_0_1_fmpq.c b/libeantic/test/fmpz_poly_extra/t-scale_0_1_fmpq.c
index b259d30..7c5ea73 100644
--- a/libeantic/test/fmpz_poly_extra/t-scale_0_1_fmpq.c
+++ b/libeantic/test/fmpz_poly_extra/t-scale_0_1_fmpq.c
@@ -10,6 +10,7 @@
 */
 
 #include <flint/fmpq_vec.h>
+#include <flint/fmpq.h>
 
 #include "../../e-antic/fmpz_poly_extra.h"
 
diff --git a/libeantic/test/fmpz_poly_extra/t-set_str_pretty.c b/libeantic/test/fmpz_poly_extra/t-set_str_pretty.c
index 14a91a8..e2df696 100644
--- a/libeantic/test/fmpz_poly_extra/t-set_str_pretty.c
+++ b/libeantic/test/fmpz_poly_extra/t-set_str_pretty.c
@@ -10,6 +10,7 @@
 */
 
 #include <stdio.h>
+#include <stdlib.h>
 #include <string.h>
 
 #include "../../e-antic/fmpz_poly_extra.h"
diff --git a/libeantic/test/renf/t-init.c b/libeantic/test/renf/t-init.c
index 39a154c..6e56457 100644
--- a/libeantic/test/renf/t-init.c
+++ b/libeantic/test/renf/t-init.c
@@ -12,6 +12,8 @@
 #include "../../e-antic/renf.h"
 #include "../../e-antic/fmpz_poly_extra.h"
 #include "../../e-antic/fmpq_poly_extra.h"
+#include <stdlib.h>
+#include <math.h>
 
 static void check_renf(renf_t nf)
 {
diff --git a/libeantic/test/renf/t-randtest.c b/libeantic/test/renf/t-randtest.c
index 7a6eb7b..3cb4c5f 100644
--- a/libeantic/test/renf/t-randtest.c
+++ b/libeantic/test/renf/t-randtest.c
@@ -11,6 +11,7 @@
 
 #include "../../e-antic/renf.h"
 #include "../../e-antic/fmpz_poly_extra.h"
+#include <flint/fmpz_vec.h>
 
 int main(void)
 {
diff --git a/libeantic/test/renf_elem/t-get_cfrac.c b/libeantic/test/renf_elem/t-get_cfrac.c
index 699ab32..8c8e3f4 100644
--- a/libeantic/test/renf_elem/t-get_cfrac.c
+++ b/libeantic/test/renf_elem/t-get_cfrac.c
@@ -10,6 +10,7 @@
 */
 
 #include "../../e-antic/renf_elem.h"
+#include <flint/fmpz_vec.h>
 
 static int sgn(int a) {
   if (a == 0) return 0;
diff --git a/libeantic/test/renf_elem/t-get_d.cpp b/libeantic/test/renf_elem/t-get_d.cpp
index 52e6c69..51cb4a0 100644
--- a/libeantic/test/renf_elem/t-get_d.cpp
+++ b/libeantic/test/renf_elem/t-get_d.cpp
@@ -10,8 +10,9 @@
 */
 
 #include <math.h>
+#include <values.h>
 
-#include <arf.h>
+#include <flint/arf.h>
 
 #include "../rand_generator.hpp"
 #include "../renf_generator.hpp"
