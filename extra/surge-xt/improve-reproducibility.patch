--- a/cmake/versiontools.cmake
+++ b/cmake/versiontools.cmake
@@ -32,6 +32,27 @@ elseif (Git_FOUND)
             OUTPUT_VARIABLE GIT_COMMIT_HASH
             OUTPUT_STRIP_TRAILING_WHITESPACE
     )
+
+    execute_process(
+            COMMAND ${GIT_EXECUTABLE} show --no-patch --format=%cd --date=format:%Y-%m-%d
+            WORKING_DIRECTORY ${SURGESRC}
+            OUTPUT_VARIABLE GIT_COMMIT_DATE
+            OUTPUT_STRIP_TRAILING_WHITESPACE
+    )
+
+    execute_process(
+            COMMAND ${GIT_EXECUTABLE} show --no-patch --format=%cd --date=format:%Y
+            WORKING_DIRECTORY ${SURGESRC}
+            OUTPUT_VARIABLE GIT_COMMIT_YEAR
+            OUTPUT_STRIP_TRAILING_WHITESPACE
+    )
+
+    execute_process(
+            COMMAND ${GIT_EXECUTABLE} show --no-patch --format=%cd --date=format:%H:%M:%S
+            WORKING_DIRECTORY ${SURGESRC}
+            OUTPUT_VARIABLE GIT_COMMIT_TIME
+            OUTPUT_STRIP_TRAILING_WHITESPACE
+    )
 endif ()
 
 if ("${GIT_BRANCH}" STREQUAL "")
@@ -74,7 +74,7 @@ else ()
     )
 endif ()
 
-cmake_host_system_information(RESULT SURGE_BUILD_FQDN QUERY FQDN)
+set(SURGE_BUILD_FQDN "archlinux")
 
 message(STATUS "Setting up surge version")
 message(STATUS "  git hash is ${GIT_COMMIT_HASH} and branch is ${GIT_BRANCH}")
@@ -109,9 +130,9 @@ set(SURGE_BUILD_HASH "${GIT_COMMIT_HASH}")
 set(SURGE_BUILD_LOCATION "${lpipeline}")
 set(SURGE_BUILD_IS_RELEASE "${isrelease}")
 
-string(TIMESTAMP SURGE_BUILD_DATE "%Y-%m-%d")
-string(TIMESTAMP SURGE_BUILD_YEAR "%Y")
-string(TIMESTAMP SURGE_BUILD_TIME "%H:%M:%S")
+string(TIMESTAMP SURGE_BUILD_DATE "${GIT_COMMIT_DATE}")
+string(TIMESTAMP SURGE_BUILD_YEAR "${GIT_COMMIT_YEAR}")
+string(TIMESTAMP SURGE_BUILD_TIME "${GIT_COMMIT_TIME}")
 
 message(STATUS "Using SURGE_VERSION=${SURGE_FULL_VERSION}")
 
